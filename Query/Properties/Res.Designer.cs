//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ALinq.Dynamic {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Res {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Res() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ALinq.Dynamic.Properties.Res", typeof(Res).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword not supported: &apos;{0}&apos;..
        /// </summary>
        internal static string ADP_KeywordNotSupported {
            get {
                return ResourceManager.GetString("ADP_KeywordNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The alias &apos;{0}&apos; was already used..
        /// </summary>
        internal static string AliasNameAlreadyUsed {
            get {
                return ResourceManager.GetString("AliasNameAlreadyUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous invocation of &apos;{0}&apos; constructor.
        /// </summary>
        internal static string AmbiguousConstructorInvocation {
            get {
                return ResourceManager.GetString("AmbiguousConstructorInvocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous invocation of indexer in type &apos;{0}&apos;.
        /// </summary>
        internal static string AmbiguousIndexerInvocation {
            get {
                return ResourceManager.GetString("AmbiguousIndexerInvocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous invocation of method &apos;{0}&apos; in type &apos;{1}&apos;.
        /// </summary>
        internal static string AmbiguousMethodInvocation {
            get {
                return ResourceManager.GetString("AmbiguousMethodInvocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous type reference, &apos;{0}&apos; is defined in both the &apos;{1}&apos; namespace and the &apos;{2}&apos; namespace..
        /// </summary>
        internal static string AmbiguousTypeReference {
            get {
                return ResourceManager.GetString("AmbiguousTypeReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument list incompatible with lambda expression.
        /// </summary>
        internal static string ArgsIncompatibleWithLambda {
            get {
                return ResourceManager.GetString("ArgsIncompatibleWithLambda", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument types &apos;{0}&apos; and &apos;{1}&apos; are incompatible for this operation..
        /// </summary>
        internal static string ArgumentTypesAreIncompatible {
            get {
                return ResourceManager.GetString("ArgumentTypesAreIncompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upper and lower limits of the BETWEEN expression cannot be untyped nulls..
        /// </summary>
        internal static string BetweenLimitsCannotBeUntypedNulls {
            get {
                return ResourceManager.GetString("BetweenLimitsCannotBeUntypedNulls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The BETWEEN lower limit type &apos;{0}&apos; is not compatible with the upper limit type &apos;{1}&apos;..
        /// </summary>
        internal static string BetweenLimitsTypesAreNotCompatible {
            get {
                return ResourceManager.GetString("BetweenLimitsTypesAreNotCompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The BETWEEN lower limit type &apos;{0}&apos; is not order-comparable with the upper limit type &apos;{1}&apos;..
        /// </summary>
        internal static string BetweenLimitsTypesAreNotOrderComparable {
            get {
                return ResourceManager.GetString("BetweenLimitsTypesAreNotOrderComparable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The BETWEEN value type &apos;{0}&apos; is not order-comparable with the limits common type &apos;{1}&apos;..
        /// </summary>
        internal static string BetweenValueIsNotOrderComparable {
            get {
                return ResourceManager.GetString("BetweenValueIsNotOrderComparable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both of the types &apos;{0}&apos; and &apos;{1}&apos; convert to the other..
        /// </summary>
        internal static string BothTypesConvertToOther {
            get {
                return ResourceManager.GetString("BothTypesConvertToOther", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert literal &apos;{0}&apos; to &apos;{1}&apos;. Numeric literal specification is not valid..
        /// </summary>
        internal static string CannotConvertNumericLiteral {
            get {
                return ResourceManager.GetString("CannotConvertNumericLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value of type &apos;{0}&apos; cannot be converted to type &apos;{1}&apos;.
        /// </summary>
        internal static string CannotConvertValue {
            get {
                return ResourceManager.GetString("CannotConvertValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create an empty multiset..
        /// </summary>
        internal static string CannotCreateEmptyMultiset {
            get {
                return ResourceManager.GetString("CannotCreateEmptyMultiset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A multiset of untyped NULLs is not valid..
        /// </summary>
        internal static string CannotCreateMultisetofNulls {
            get {
                return ResourceManager.GetString("CannotCreateMultisetofNulls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not find a constructor &apos;({1})&apos; on type &apos;{0}&apos;..
        /// </summary>
        internal static string CanNotFindConstructor {
            get {
                return ResourceManager.GetString("CanNotFindConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not find a method &apos;{0}({1})&apos; on the type &apos;{2}&apos;..
        /// </summary>
        internal static string CanNotFindMethod {
            get {
                return ResourceManager.GetString("CanNotFindMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexing of multi-dimensional arrays is not supported.
        /// </summary>
        internal static string CannotIndexMultiDimArray {
            get {
                return ResourceManager.GetString("CannotIndexMultiDimArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be instantiated because it is defined as an abstract type..
        /// </summary>
        internal static string CannotInstantiateAbstractType {
            get {
                return ResourceManager.GetString("CannotInstantiateAbstractType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be resolved into a valid type. Are you reference the corrected namespace?.
        /// </summary>
        internal static string CannotResolveNameToType {
            get {
                return ResourceManager.GetString("CannotResolveNameToType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be resolved into a valid type or function..
        /// </summary>
        internal static string CannotResolveNameToTypeOrFunction {
            get {
                return ResourceManager.GetString("CannotResolveNameToTypeOrFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is a system namespace and cannot be used as an Alias. Use some other Alias..
        /// </summary>
        internal static string CannotUseSystemNamespaceAsAlias {
            get {
                return ResourceManager.GetString("CannotUseSystemNamespaceAsAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument &apos;{0}&apos; is not valid.  The set contains a null value..
        /// </summary>
        internal static string CheckArgumentContainsNullFailed {
            get {
                return ResourceManager.GetString("CheckArgumentContainsNullFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;]&apos; or &apos;,&apos; expected.
        /// </summary>
        internal static string CloseBracketOrCommaExpected {
            get {
                return ResourceManager.GetString("CloseBracketOrCommaExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;}&apos; or &apos;,&apos; expected.
        /// </summary>
        internal static string CloseCurlyBraceOrCommaExpected {
            get {
                return ResourceManager.GetString("CloseCurlyBraceOrCommaExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;)&apos; expected.
        /// </summary>
        internal static string CloseParenExpected {
            get {
                return ResourceManager.GetString("CloseParenExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;)&apos; or &apos;,&apos; expected.
        /// </summary>
        internal static string CloseParenOrCommaExpected {
            get {
                return ResourceManager.GetString("CloseParenOrCommaExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;)&apos; or operator expected.
        /// </summary>
        internal static string CloseParenOrOperatorExpected {
            get {
                return ResourceManager.GetString("CloseParenOrOperatorExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;:&apos; expected.
        /// </summary>
        internal static string ColonExpected {
            get {
                return ResourceManager.GetString("ColonExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; could not be resolved in the current scope or context. Make sure that all referenced variables are in scope, that namespaces are referenced correctly..
        /// </summary>
        internal static string CouldNotResolveIdentifier {
            get {
                return ResourceManager.GetString("CouldNotResolveIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested cast is not allowed: from type &apos;{0}&apos; to type &apos;{1}&apos;..
        /// </summary>
        internal static string Cqt_Cast_InvalidCast {
            get {
                return ResourceManager.GetString("Cqt_Cast_InvalidCast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified parameter name is not valid: &apos;{0}&apos;..
        /// </summary>
        internal static string Cqt_CommandTree_InvalidParameterName {
            get {
                return ResourceManager.GetString("Cqt_CommandTree_InvalidParameterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only enumeration or primitive types may be used as constant value types. DbConstantExpression cannot be created using an instance of type &apos;{0}&apos;..
        /// </summary>
        internal static string Cqt_Constant_InvalidConstantType {
            get {
                return ResourceManager.GetString("Cqt_Constant_InvalidConstantType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value is not an instance of a valid constant type..
        /// </summary>
        internal static string Cqt_Constant_InvalidType {
            get {
                return ResourceManager.GetString("Cqt_Constant_InvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limit must be a ConstantExpression or a ParameterExpression..
        /// </summary>
        internal static string Cqt_Limit_ConstantOrParameterRefRequired {
            get {
                return ResourceManager.GetString("Cqt_Limit_ConstantOrParameterRefRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limit must have an integer ResultType..
        /// </summary>
        internal static string Cqt_Limit_IntegerRequired {
            get {
                return ResourceManager.GetString("Cqt_Limit_IntegerRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limit must have a non-negative value..
        /// </summary>
        internal static string Cqt_Limit_NonNegativeLimitRequired {
            get {
                return ResourceManager.GetString("Cqt_Limit_NonNegativeLimitRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified EntitySet is not valid because its EntityContainer property has a value of null..
        /// </summary>
        internal static string Cqt_Metadata_EntitySetEntityContainerNull {
            get {
                return ResourceManager.GetString("Cqt_Metadata_EntitySetEntityContainerNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DbNotExpression requires an argument with a Boolean type..
        /// </summary>
        internal static string Cqt_Not_BooleanArgumentRequired {
            get {
                return ResourceManager.GetString("Cqt_Not_BooleanArgumentRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DbOrExpression requires arguments with a common Boolean type..
        /// </summary>
        internal static string Cqt_Or_BooleanArgumentsRequired {
            get {
                return ResourceManager.GetString("Cqt_Or_BooleanArgumentsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WHERE predicate.
        /// </summary>
        internal static string CtxWhereClause {
            get {
                return ResourceManager.GetString("CtxWhereClause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cycle was detected in the type hierarchy of &apos;{0}&apos;..
        /// </summary>
        internal static string CycleInTypeHierarchy {
            get {
                return ResourceManager.GetString("CycleInTypeHierarchy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Digit expected.
        /// </summary>
        internal static string DigitExpected {
            get {
                return ResourceManager.GetString("DigitExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The identifier &apos;{0}&apos; was defined more than once.
        /// </summary>
        internal static string DuplicateIdentifier {
            get {
                return ResourceManager.GetString("DuplicateIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member &apos;{0}&apos; on the type &apos;{1}&apos; can not be null..
        /// </summary>
        internal static string ELinq_MemberCannotBeNull {
            get {
                return ResourceManager.GetString("ELinq_MemberCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of the member &apos;{0}&apos; on the type &apos;{1}&apos; is not implement the IQueryable interface..
        /// </summary>
        internal static string ELinq_MemberMustBeIQueryable {
            get {
                return ResourceManager.GetString("ELinq_MemberMustBeIQueryable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member &apos;{0}&apos; is not a property or a field..
        /// </summary>
        internal static string ELinq_NotPropertyOrField {
            get {
                return ResourceManager.GetString("ELinq_NotPropertyOrField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Near line {0}, column {1}..
        /// </summary>
        internal static string ErrorContextWithoutPredicate {
            get {
                return ResourceManager.GetString("ErrorContextWithoutPredicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Near term &apos;{0}&apos;, line {1}, column {2}..
        /// </summary>
        internal static string ErrorContextWithTerm {
            get {
                return ResourceManager.GetString("ErrorContextWithTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified expression cannot be NULL..
        /// </summary>
        internal static string ExpressionCannotBeNull {
            get {
                return ResourceManager.GetString("ExpressionCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression expected.
        /// </summary>
        internal static string ExpressionExpected {
            get {
                return ResourceManager.GetString("ExpressionExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified expression must be of CollectionType..
        /// </summary>
        internal static string ExpressionMustBeCollection {
            get {
                return ResourceManager.GetString("ExpressionMustBeCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified expression must be of Boolean type..
        /// </summary>
        internal static string ExpressionTypeMustBeBoolean {
            get {
                return ResourceManager.GetString("ExpressionTypeMustBeBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified expression must be of IQueryable type..
        /// </summary>
        internal static string ExpressionTypeMustBeQueryable {
            get {
                return ResourceManager.GetString("ExpressionTypeMustBeQueryable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first expression must be of type &apos;Boolean&apos;..
        /// </summary>
        internal static string FirstExprMustBeBool {
            get {
                return ResourceManager.GetString("FirstExprMustBeBool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The query syntax is not valid..
        /// </summary>
        internal static string GenericSyntaxError {
            get {
                return ResourceManager.GetString("GenericSyntaxError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HAVING clause must be preceded by a GROUP BY clause..
        /// </summary>
        internal static string HavingRequiresGroupClause {
            get {
                return ResourceManager.GetString("HavingRequiresGroupClause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier expected.
        /// </summary>
        internal static string IdentifierExpected {
            get {
                return ResourceManager.GetString("IdentifierExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;iif&apos; function requires three arguments.
        /// </summary>
        internal static string IifRequiresThreeArgs {
            get {
                return ResourceManager.GetString("IifRequiresThreeArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator &apos;{0}&apos; incompatible with operand type &apos;{1}&apos;.
        /// </summary>
        internal static string IncompatibleOperand {
            get {
                return ResourceManager.GetString("IncompatibleOperand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator &apos;{0}&apos; incompatible with operand types &apos;{1}&apos; and &apos;{2}&apos;.
        /// </summary>
        internal static string IncompatibleOperands {
            get {
                return ResourceManager.GetString("IncompatibleOperands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The In clause requires a CollectionType expression. .
        /// </summary>
        internal static string InExpressionMustBeCollection {
            get {
                return ResourceManager.GetString("InExpressionMustBeCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax error &apos;{0}&apos;.
        /// </summary>
        internal static string InvalidCharacter {
            get {
                return ResourceManager.GetString("InvalidCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DateTime &apos;{0}&apos; is not valid in DateTime literal &apos;{1}&apos;..
        /// </summary>
        internal static string InvalidDateTime {
            get {
                return ResourceManager.GetString("InvalidDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The identifier &apos;{0}&apos; is not valid because it is not contained either in an aggregate function or in the GROUP BY clause..
        /// </summary>
        internal static string InvalidGroupIdentifierReference {
            get {
                return ResourceManager.GetString("InvalidGroupIdentifierReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array index must be an integer expression.
        /// </summary>
        internal static string InvalidIndex {
            get {
                return ResourceManager.GetString("InvalidIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid integer literal &apos;{0}&apos;.
        /// </summary>
        internal static string InvalidIntegerLiteral {
            get {
                return ResourceManager.GetString("InvalidIntegerLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command parameter syntax &apos;@{0}&apos; is not valid..
        /// </summary>
        internal static string InvalidParameterFormat {
            get {
                return ResourceManager.GetString("InvalidParameterFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to cast the query element type &apos;{0}&apos; to type &apos;{1}&apos;..
        /// </summary>
        internal static string InvalidQueryCast {
            get {
                return ResourceManager.GetString("InvalidQueryCast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid real literal &apos;{0}&apos;.
        /// </summary>
        internal static string InvalidRealLiteral {
            get {
                return ResourceManager.GetString("InvalidRealLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT VALUE can have only one expression in the projection list..
        /// </summary>
        internal static string InvalidSelectValueList {
            get {
                return ResourceManager.GetString("InvalidSelectValueList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The query syntax is not valid, &apos;{0}&apos; expected..
        /// </summary>
        internal static string KeywordExpected {
            get {
                return ResourceManager.GetString("KeywordExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LIKE argument must be a command parameter or an string literal..
        /// </summary>
        internal static string LikeArgMustBeConstantOrParameter {
            get {
                return ResourceManager.GetString("LikeArgMustBeConstantOrParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LIKE argument can not be null or Empty..
        /// </summary>
        internal static string LikeArgMustBeNotEmpty {
            get {
                return ResourceManager.GetString("LikeArgMustBeNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LIKE argument must be of string type..
        /// </summary>
        internal static string LikeArgMustBeStringType {
            get {
                return ResourceManager.GetString("LikeArgMustBeStringType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to collection.
        /// </summary>
        internal static string LocalizedCollection {
            get {
                return ResourceManager.GetString("LocalizedCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to column.
        /// </summary>
        internal static string LocalizedColumn {
            get {
                return ResourceManager.GetString("LocalizedColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to complex.
        /// </summary>
        internal static string LocalizedComplex {
            get {
                return ResourceManager.GetString("LocalizedComplex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ..
        /// </summary>
        internal static string LocalizedDot {
            get {
                return ResourceManager.GetString("LocalizedDot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to entity.
        /// </summary>
        internal static string LocalizedEntity {
            get {
                return ResourceManager.GetString("LocalizedEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to entity container.
        /// </summary>
        internal static string LocalizedEntityContainerExpression {
            get {
                return ResourceManager.GetString("LocalizedEntityContainerExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to enum member.
        /// </summary>
        internal static string LocalizedEnumMember {
            get {
                return ResourceManager.GetString("LocalizedEnumMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function.
        /// </summary>
        internal static string LocalizedFunction {
            get {
                return ResourceManager.GetString("LocalizedFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to query inline function.
        /// </summary>
        internal static string LocalizedInlineFunction {
            get {
                return ResourceManager.GetString("LocalizedInlineFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to keyword.
        /// </summary>
        internal static string LocalizedKeyword {
            get {
                return ResourceManager.GetString("LocalizedKeyword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to left.
        /// </summary>
        internal static string LocalizedLeft {
            get {
                return ResourceManager.GetString("LocalizedLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to line.
        /// </summary>
        internal static string LocalizedLine {
            get {
                return ResourceManager.GetString("LocalizedLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace, type or function.
        /// </summary>
        internal static string LocalizedMetadataMemberExpression {
            get {
                return ResourceManager.GetString("LocalizedMetadataMemberExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace.
        /// </summary>
        internal static string LocalizedNamespace {
            get {
                return ResourceManager.GetString("LocalizedNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Near.
        /// </summary>
        internal static string LocalizedNear {
            get {
                return ResourceManager.GetString("LocalizedNear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to primitive.
        /// </summary>
        internal static string LocalizedPrimitive {
            get {
                return ResourceManager.GetString("LocalizedPrimitive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to reference.
        /// </summary>
        internal static string LocalizedReference {
            get {
                return ResourceManager.GetString("LocalizedReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to right.
        /// </summary>
        internal static string LocalizedRight {
            get {
                return ResourceManager.GetString("LocalizedRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to row.
        /// </summary>
        internal static string LocalizedRow {
            get {
                return ResourceManager.GetString("LocalizedRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to term.
        /// </summary>
        internal static string LocalizedTerm {
            get {
                return ResourceManager.GetString("LocalizedTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to type.
        /// </summary>
        internal static string LocalizedType {
            get {
                return ResourceManager.GetString("LocalizedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to value expression.
        /// </summary>
        internal static string LocalizedValueExpression {
            get {
                return ResourceManager.GetString("LocalizedValueExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} member &apos;{1}&apos; type must be the same as {2} member &apos;{3}&apos; type..
        /// </summary>
        internal static string MemberTypeMismatch {
            get {
                return ResourceManager.GetString("MemberTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;{0}&apos; in type &apos;{1}&apos; does not return a value.
        /// </summary>
        internal static string MethodIsVoid {
            get {
                return ResourceManager.GetString("MethodIsVoid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Methods on type &apos;{0}&apos; are not accessible.
        /// </summary>
        internal static string MethodsAreInaccessible {
            get {
                return ResourceManager.GetString("MethodsAreInaccessible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression is missing an &apos;as&apos; clause.
        /// </summary>
        internal static string MissingAsClause {
            get {
                return ResourceManager.GetString("MissingAsClause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiset element types are incompatible..
        /// </summary>
        internal static string MultisetElemsAreNotTypeCompatible {
            get {
                return ResourceManager.GetString("MultisetElemsAreNotTypeCompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Neither of the types &apos;{0}&apos; and &apos;{1}&apos; converts to the other..
        /// </summary>
        internal static string NeitherTypeConvertsToOther {
            get {
                return ResourceManager.GetString("NeitherTypeConvertsToOther", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No applicable aggregate method &apos;{0}&apos; exists.
        /// </summary>
        internal static string NoApplicableAggregate {
            get {
                return ResourceManager.GetString("NoApplicableAggregate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No applicable indexer exists in type &apos;{0}&apos;.
        /// </summary>
        internal static string NoApplicableIndexer {
            get {
                return ResourceManager.GetString("NoApplicableIndexer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No applicable method &apos;{0}&apos; exists in type &apos;{1}&apos;.
        /// </summary>
        internal static string NoApplicableMethod {
            get {
                return ResourceManager.GetString("NoApplicableMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No overload of canonical aggregate function &apos;{0}&apos; is compatible with the argument types in &apos;{1}&apos;. .
        /// </summary>
        internal static string NoCanonicalAggrFunctionOverloadMatch {
            get {
                return ResourceManager.GetString("NoCanonicalAggrFunctionOverloadMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No overload of canonical function &apos;{0}&apos; is compatible with the argument types in &apos;{1}&apos;. .
        /// </summary>
        internal static string NoCanonicalFunctionOverloadMatch {
            get {
                return ResourceManager.GetString("NoCanonicalFunctionOverloadMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No matching constructor in type &apos;{0}&apos;.
        /// </summary>
        internal static string NoMatchingConstructor {
            get {
                return ResourceManager.GetString("NoMatchingConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No matching method with &apos;{0}&apos; in type&apos;..
        /// </summary>
        internal static string NoMatchingMethod {
            get {
                return ResourceManager.GetString("NoMatchingMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No public property or field &apos;{0}&apos; in type &apos;{1}&apos;..
        /// </summary>
        internal static string NoPublicPropertyOrField {
            get {
                return ResourceManager.GetString("NoPublicPropertyOrField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}({1})&apos; is not a predefine method or member of &apos;{2}&apos; or type..
        /// </summary>
        internal static string NotMethodOrType {
            get {
                return ResourceManager.GetString("NotMethodOrType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified parameter type &apos;{0}&apos; is not valid. Only scalar types(such as System.Int32, System.Decimal, System.DateTime), System.Guid, Expression and IQueryable are supported..
        /// </summary>
        internal static string ObjectParameter_InvalidParameterType {
            get {
                return ResourceManager.GetString("ObjectParameter_InvalidParameterType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter named &apos;{0}&apos; already exists in the parameter collection. Parameter names must be unique in the parameter collection..
        /// </summary>
        internal static string ObjectParameterCollection_DuplicateParameterName {
            get {
                return ResourceManager.GetString("ObjectParameterCollection_DuplicateParameterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;[&apos; expected.
        /// </summary>
        internal static string OpenBracketExpected {
            get {
                return ResourceManager.GetString("OpenBracketExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;(&apos; expected.
        /// </summary>
        internal static string OpenParenExpected {
            get {
                return ResourceManager.GetString("OpenParenExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter name is empty or invalid. Parameter name can only contain letters, numbers, and underscores..
        /// </summary>
        internal static string ParameterNameRequried {
            get {
                return ResourceManager.GetString("ParameterNameRequried", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command parameter or multiset expected..
        /// </summary>
        internal static string ParameterOrMultiSetExpected {
            get {
                return ResourceManager.GetString("ParameterOrMultiSetExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command parameter &apos;{0}&apos; was not defined..
        /// </summary>
        internal static string ParameterWasNotDefined {
            get {
                return ResourceManager.GetString("ParameterWasNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (at index {1})..
        /// </summary>
        internal static string ParseExceptionFormat {
            get {
                return ResourceManager.GetString("ParseExceptionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} expression must be a command parameter or an integral numeric literal..
        /// </summary>
        internal static string PlaceholderExpressionMustBeConstant {
            get {
                return ResourceManager.GetString("PlaceholderExpressionMustBeConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not find setter on property &apos;{0}&apos; on type &apos;{1}&apos;..
        /// </summary>
        internal static string PropertyNoSetter {
            get {
                return ResourceManager.GetString("PropertyNoSetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require public field &apos;{0}&apos; on type &apos;{1}&apos;..
        /// </summary>
        internal static string RequirePublicField {
            get {
                return ResourceManager.GetString("RequirePublicField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require public setter on property &apos;{0}&apos; on type &apos;{1}&apos;..
        /// </summary>
        internal static string RequirePublicPropertySetter {
            get {
                return ResourceManager.GetString("RequirePublicPropertySetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ;&apos; expected.
        /// </summary>
        internal static string SemicolonExpected {
            get {
                return ResourceManager.GetString("SemicolonExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The query syntax is not valid, {0} or {1} expected..
        /// </summary>
        internal static string Token1OrToken2Expected {
            get {
                return ResourceManager.GetString("Token1OrToken2Expected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The query syntax is not valid, {0} expected..
        /// </summary>
        internal static string TokenExpected {
            get {
                return ResourceManager.GetString("TokenExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The TOP and LIMIT sub-clauses cannot be used together in the same query expression..
        /// </summary>
        internal static string TopAndLimitCannotCoexist {
            get {
                return ResourceManager.GetString("TopAndLimitCannotCoexist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The TOP and SKIP sub-clauses cannot be used together in the same query expression. Use LIMIT instead of TOP..
        /// </summary>
        internal static string TopAndSkipCannotCoexist {
            get {
                return ResourceManager.GetString("TopAndSkipCannotCoexist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The TOP and TAKE sub-clauses cannot be used together in the same query expression..
        /// </summary>
        internal static string TopAndTakeCannotCoexist {
            get {
                return ResourceManager.GetString("TopAndTakeCannotCoexist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; has no nullable form.
        /// </summary>
        internal static string TypeHasNoNullableForm {
            get {
                return ResourceManager.GetString("TypeHasNoNullableForm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The query syntax is not valid, Type Name expected..
        /// </summary>
        internal static string TypeNameExpected {
            get {
                return ResourceManager.GetString("TypeNameExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; is not supported..
        /// </summary>
        internal static string TypeNotSupported {
            get {
                return ResourceManager.GetString("TypeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No property or field &apos;{0}&apos; exists in type &apos;{1}&apos;..
        /// </summary>
        internal static string UnknownPropertyOrField {
            get {
                return ResourceManager.GetString("UnknownPropertyOrField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown type &apos;{0}&apos;.
        /// </summary>
        internal static string UnknownType {
            get {
                return ResourceManager.GetString("UnknownType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unterminated binary literal..
        /// </summary>
        internal static string UnterminatedBinaryLiteral {
            get {
                return ResourceManager.GetString("UnterminatedBinaryLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unterminated datetime literal..
        /// </summary>
        internal static string UnterminatedDateTimeLiteral {
            get {
                return ResourceManager.GetString("UnterminatedDateTimeLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unterminated string literal..
        /// </summary>
        internal static string UnterminatedStringLiteral {
            get {
                return ResourceManager.GetString("UnterminatedStringLiteral", resourceCulture);
            }
        }
    }
}
