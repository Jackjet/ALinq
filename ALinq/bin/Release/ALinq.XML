<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ALinq</name>
    </assembly>
    <members>
        <member name="T:ALinq.ChangeAction">
            <summary>
            Describes the type of change the entity will undergo when changes are submitted to the database.
            </summary>
        </member>
        <member name="F:ALinq.ChangeAction.None">
            <summary>
            The entity will not be submitted.
            </summary>
        </member>
        <member name="F:ALinq.ChangeAction.Delete">
            <summary>
            The entity will be deleted.
            </summary>
        </member>
        <member name="F:ALinq.ChangeAction.Insert">
            <summary>
            The entity will be inserted.
            </summary>
        </member>
        <member name="F:ALinq.ChangeAction.Update">
            <summary>
            The entity will be updated.
            </summary>
        </member>
        <member name="T:ALinq.ChangeConflictException">
            <summary>
            
            </summary>
        </member>
        <member name="M:ALinq.ChangeConflictException.#ctor">
            <summary>
            Initializes a new instance of the ALinq.ChangeConflictException class.
            </summary>
        </member>
        <member name="M:ALinq.ChangeConflictException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ALinq.ChangeConflictException class and specifies a message to explain the exception.
            </summary>
            <param name="message">The message to be exposed when the exception is thrown.</param>
        </member>
        <member name="M:ALinq.ChangeConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ALinq.ChangeConflictException class, specifies a message to explain the exception, and specifies the exception that caused this exception.
            </summary>
            <param name="message">The message to be exposed when the exception is thrown.</param>
            <param name="innerException">Specifies the exception of which ALinq.ChangeConflictException is a result.</param>
        </member>
        <member name="T:ALinq.ChangeSet">
            <summary>
            Provides a container to hold changes.
            </summary>
        </member>
        <member name="M:ALinq.ChangeSet.ToString">
            <summary>
            Returns a string that represents the current ALinq.ChangeSet.
            </summary>
            <returns>A string that represents the current ALinq.ChangeSet.</returns>
        </member>
        <member name="P:ALinq.ChangeSet.Deletes">
            <summary>
            Gets a list of entities that have been deleted from the ALinq.ChangeSet.
            </summary>
        </member>
        <member name="P:ALinq.ChangeSet.Inserts">
            <summary>
            Gets a list of entities that have been inserted into the ALinq.ChangeSet.
            </summary>
        </member>
        <member name="P:ALinq.ChangeSet.Updates">
            <summary>
            Gets a list of entities that have been updated in the ALinq.ChangeSet.
            </summary>
        </member>
        <member name="T:ALinq.ChangeConflictCollection">
            <summary>
            Returns a collection of objects involved in concurrency conflicts.
            </summary>
        </member>
        <member name="M:ALinq.ChangeConflictCollection.Clear">
            <summary>
            Removes all conflicts from the collection.
            </summary>
        </member>
        <member name="M:ALinq.ChangeConflictCollection.Contains(ALinq.ObjectChangeConflict)">
            <summary>
            Specifies whether a given conflict is a member of the collection.
            </summary>
            <param name="item">The specified conflict.</param>
            <returns>Returns true if the specified conflict is a member of the collection.</returns>
        </member>
        <member name="M:ALinq.ChangeConflictCollection.CopyTo(ALinq.ObjectChangeConflict[],System.Int32)">
            <summary>
            For a description of this member, see System.Collections.ICollection.CopyTo(System.Array,System.Int32).
            </summary>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The array index where the copy is to start.</param>
        </member>
        <member name="M:ALinq.ChangeConflictCollection.GetEnumerator">
            <summary>
            Returns the enumerator for the collection.
            </summary>
            <returns>An enumerator for the collection.</returns>
        </member>
        <member name="M:ALinq.ChangeConflictCollection.Remove(ALinq.ObjectChangeConflict)">
            <summary>
            Specifies whether the specified conflict is removed from the collection.
            </summary>
            <param name="item">The conflict to remove.</param>
            <returns>Returns true if the ALinq.ObjectChangeConflict is removed from the collection.</returns>
        </member>
        <member name="M:ALinq.ChangeConflictCollection.ResolveAll(ALinq.RefreshMode)">
            <summary>
            Resolves all conflicts in the collection by using the specified strategy.
            </summary>
            <param name="mode">One of the options available in ALinq.RefreshMode.</param>
        </member>
        <member name="M:ALinq.ChangeConflictCollection.ResolveAll(ALinq.RefreshMode,System.Boolean)">
            <summary>
            Resolves all conflicts in the collection by using the specified strategy.
            </summary>
            <param name="mode">The strategy to use to resolve the conflict.</param>
            <param name="autoResolveDeletes">If true, automatically resolves conflicts that result from a modified object that is no longer in the database.</param>
        </member>
        <member name="P:ALinq.ChangeConflictCollection.Count">
            <summary>
            Returns the number of conflicts in the collection
            </summary>
        </member>
        <member name="P:ALinq.ChangeConflictCollection.Item(System.Int32)">
            <summary>
            Returns an item in conflict.
            </summary>
            <param name="index">Index in the collection of the item in conflict.</param>
            <returns>An ALinq.ObjectChangeConflict representing the item in conflict.</returns>
        </member>
        <member name="T:ALinq.DataLoadOptions">
            <summary>
            Provides for immediate loading and filtering of related data.
            </summary>
        </member>
        <member name="M:ALinq.DataLoadOptions.#ctor">
            <summary>
            Initializes a new instance of the ALinq.DataLoadOptions class.
            </summary>
        </member>
        <member name="M:ALinq.DataLoadOptions.AssociateWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Filters objects retrieved for a particular relationship.
            </summary>
            <typeparam name="T">The type that is queried against.  If the type is unmapped, an exception is thrown.</typeparam>
            <param name="expression">Identifies the query to be used on a particular one-to-many field or property. Note the following: If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.  If an operator other than a valid operator appears in the expression, an exception is thrown. Valid operators are as follows: Where OrderBy ThenBy OrderByDescending ThenByDescending Take</param>
        </member>
        <member name="M:ALinq.DataLoadOptions.AssociateWith(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Filters the objects retrieved for a particular relationship.
            </summary>
            <param name="expression">Identifies the query to be used on a particular one-to-many field or property. Note the following: If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.  If an operator other than a valid operator appears in the expression, an exception is thrown. Valid operators are as follows: Where OrderBy ThenBy OrderByDescending ThenByDescending Take</param>
        </member>
        <member name="M:ALinq.DataLoadOptions.LoadWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Specifies which sub-objects to retrieve when a query is submitted for an object of type T.
            </summary>
            <typeparam name="T">Type that is queried against.  If this type is unmapped, an exception is thrown.</typeparam>
            <param name="expression">Identifies the field or property to be retrieved.  If the expression does not identify a field or property that represents a one-to-one or one-to-many relationship, an exception is thrown.</param>
        </member>
        <member name="M:ALinq.DataLoadOptions.LoadWith(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Retrieves specified data related to the main target by using a lambda expression.
            </summary>
            <param name="expression">A lambda expression that identifies the related material.</param>
        </member>
        <member name="T:ALinq.DuplicateKeyException">
            <summary>
            Thrown when an attempt is made to add an object to the identity cache by using a key that is already being used.
            </summary>
        </member>
        <member name="M:ALinq.DuplicateKeyException.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the ALinq.DuplicateKeyException class.
            </summary>
            <param name="duplicate">The duplicate key that caused the exception to be thrown.</param>
        </member>
        <member name="M:ALinq.DuplicateKeyException.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the ALinq.DuplicateKeyException class by referencing the duplicate key and providing an error message.
            </summary>
            <param name="duplicate">The duplicate key that caused the exception to be thrown.</param>
            <param name="message">The message to appear when the exception is thrown.</param>
        </member>
        <member name="M:ALinq.DuplicateKeyException.#ctor(System.Object,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ALinq.DuplicateKeyException class by referencing the duplicate key, providing an error message, and specifying the exception that caused this exception to be thrown.
            </summary>
            <param name="duplicate">The duplicate key that caused the exception to be thrown.</param>
            <param name="message">The message to appear when the exception is thrown.</param>
            <param name="innerException">The previous exception that caused the ALinq.DuplicateKeyException exception to be thrown.</param>
        </member>
        <member name="P:ALinq.DuplicateKeyException.Object">
            <summary>
            Gets the object that caused the exception.
            </summary>
            <returns>
            The object that caused the exception.
            </returns>
        </member>
        <member name="T:ALinq.ITable">
            <summary>
            Used for weakly typed query scenarios.
            </summary>
        </member>
        <member name="M:ALinq.ITable.Attach(System.Object)">
            <summary>
            Attaches an entity to the ALinq.DataContext in an unmodified state.
            </summary>
            <param name="entity">The entity to be attached.</param>
        </member>
        <member name="M:ALinq.ITable.Attach(System.Object,System.Boolean)">
            <summary>
            Attaches all entities of a collection to the ALinq.DataContext in either a modified or unmodified state.
            </summary>
            <param name="entity">The collection of entities.</param>
            <param name="asModified">true to attach the entities as modified.</param>
        </member>
        <member name="M:ALinq.ITable.Attach(System.Object,System.Object)">
            <summary>
            Attaches an entity to the ALinq.DataContext in either a modified or unmodified state by specifying both the entity and its original state.
            </summary>
            <param name="entity">The entity to be attached.</param>
            <param name="original">An instance of the same entity type with data members that contain the original values.</param>
        </member>
        <member name="M:ALinq.ITable.AttachAll(System.Collections.IEnumerable)">
            <summary>
            Attaches all entities of a collection to the ALinq.DataContext in either a modified or unmodified state.
            </summary>
            <param name="entities">The collection of entities.</param>
        </member>
        <member name="M:ALinq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)">
            <summary>
            Attaches all entities of a collection to the ALinq.DataContext in either a modified or unmodified state.
            </summary>
            <param name="entities">The collection of entities.</param>
            <param name="asModified">true to attach the entities as modified.</param>
        </member>
        <member name="M:ALinq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)">
            <summary>
            Puts all entities from the collection into a pending delete state.
            </summary>
            <param name="entities">The collection from which all items are removed.</param>
        </member>
        <member name="M:ALinq.ITable.DeleteOnSubmit(System.Object)">
            <summary>
            Puts an entity from this table into a pending delete state.
            </summary>
            <param name="entity">The entity to be removed.</param>
        </member>
        <member name="M:ALinq.ITable.GetModifiedMembers(System.Object)">
            <summary>
            Returns an array of modified members that contain their current and original values.
            </summary>
            <param name="entity">The entity from which to get the array.</param>
        </member>
        <member name="M:ALinq.ITable.GetOriginalEntityState(System.Object)">
            <summary>
            Retrieves original values.
            </summary>
            <param name="entity">The entity whose original value is to be retrieved.</param>
            <returns>A copy of the original entity. The value is null if the entity passed in is not tracked. Disconnected entities sent back by a client must be attached before the ALinq.DataContext can begin to track their state. The "original state" of a newly attached entity is established based on values supplied by the client. The data context does not track the state of disconnected entities.</returns>
        </member>
        <member name="M:ALinq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)">
            <summary>
            Adds all entities of a collection to the ALinq.DataContext in a pending insert state.
            </summary>
            <param name="entities">The entities to add.</param>
        </member>
        <member name="M:ALinq.ITable.InsertOnSubmit(System.Object)">
            <summary>
            Adds an entity in a pending insert state to this table.
            </summary>
            <param name="entity">The entity to be added.</param>
        </member>
        <member name="P:ALinq.ITable.Context">
            <summary>
            Gets the ALinq.DataContext that has been used to retrieve this ALinq.ITable.
            </summary>
        </member>
        <member name="P:ALinq.ITable.IsReadOnly">
            <summary>
            Returns true if ALinq.DataContext.ObjectTrackingEnabled is false in the ALinq.DataContext that has been used to retrieve this ALinq.ITable.
            </summary>
        </member>
        <member name="T:ALinq.ITable`1">
            <summary>Represents a table for a particular type in the underlying database. </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:ALinq.ITable`1.InsertOnSubmit(`0)">
            <summary>When overridden, adds an entity in a pending insert state to this ITable&lt;TEntity&gt;.</summary>
            <param name="entity">The object to insert.</param>
        </member>
        <member name="M:ALinq.ITable`1.Attach(`0)">
            <summary>When overridden, attaches a disconnected or "detached" entity to a new DataContext when original values are required for optimistic concurrency checks.</summary>
            <param name="entity">The object to be added.</param>
        </member>
        <member name="M:ALinq.ITable`1.DeleteOnSubmit(`0)">
            <summary>When overridden, puts an entity from this table into a pending delete state.</summary>
            <param name="entity">The object to delete.</param>
        </member>
        <member name="T:ALinq.Mapping.AssociationAttribute">
            <summary>
            Designates a property to represent a database association, such as a foreign key relationship.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.AssociationAttribute.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.AssociationAttribute class.
            </summary>
        </member>
        <member name="P:ALinq.Mapping.AssociationAttribute.DeleteOnNull">
            <summary>
            When placed on a 1:1 association whose foreign key members are all non-nullable, deletes the object when the association is set to null.
            </summary>
            <returns>
            Setting to True deletes the object. The default value is False.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.AssociationAttribute.DeleteRule">
            <summary>
            Gets or sets delete behavior for an association.
            </summary>
            <returns>
            A string representing the rule.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.AssociationAttribute.IsForeignKey">
            <summary>
            Gets or sets the member as the foreign key in an association representing a database relationship.
            </summary>
            <returns>
            Default = false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.AssociationAttribute.IsUnique">
            <summary>
            Gets or sets the indication of a uniqueness constraint on the foreign key.
            </summary>
            <returns>
            Default = false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.AssociationAttribute.OtherKey">
            <summary>
            Gets or sets one or more members of the target entity class as key values on the other side of the association.
            </summary>
            <returns>
            Default = Id of the related class.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.AssociationAttribute.ThisKey">
            <summary>
            Gets or sets members of this entity class to represent the key values on this side of the association.
            </summary>
            <returns>
            Default = Id of the containing class.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.FunctionAttribute">
            <summary>
            Associates a method with a stored procedure or user-defined function in the database.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.FunctionAttribute.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.FunctionAttribute class.
            </summary>
        </member>
        <member name="P:ALinq.Mapping.FunctionAttribute.IsComposable">
            <summary>
            Gets or sets whether a method is mapped to a function or to a stored procedure.
            </summary>
            <returns>true if a function; false if a stored procedure.</returns>
        </member>
        <member name="P:ALinq.Mapping.FunctionAttribute.Name">
            <summary>
            Gets or sets the name of the function.
            </summary>
            <returns>
            The name of the function or stored procedure.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.AutoSync">
            <summary>
            Instructs the runtime how to retrieve the value after an insert or update operation.
            </summary>
        </member>
        <member name="F:ALinq.Mapping.AutoSync.Default">
            <summary>
            Automatically selects the value.
            </summary>
        </member>
        <member name="F:ALinq.Mapping.AutoSync.Always">
            <summary>
            Always returns the value.
            </summary>
        </member>
        <member name="F:ALinq.Mapping.AutoSync.Never">
            <summary>
            Never returns the value.
            </summary>
        </member>
        <member name="F:ALinq.Mapping.AutoSync.OnInsert">
            <summary>
            Returns the value only after an insert operation.
            </summary>
        </member>
        <member name="F:ALinq.Mapping.AutoSync.OnUpdate">
            <summary>
            Returns the value only after an update operation.
            </summary>
        </member>
        <member name="T:ALinq.Mapping.InheritanceMappingAttribute">
            <summary>
            Maps an inheritance hierarchy in a LINQ to SQL application.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.InheritanceMappingAttribute.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.InheritanceMappingAttribute class.
            </summary>
        </member>
        <member name="P:ALinq.Mapping.InheritanceMappingAttribute.Code">
            <summary>
            Gets or sets the discriminator code value in a mapped inheritance hierarchy.
            </summary>
            <returns>
            Must be user-specified. There is no default value.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.InheritanceMappingAttribute.IsDefault">
            <summary>
            Gets or sets whether an object of this type in instantiated when the discriminator value does not match a specified value.
            </summary>
            <returns>
            Default = false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.InheritanceMappingAttribute.Type">
            <summary>
            Gets or sets the type of the class in the hierarchy.
            </summary>
            <returns>
            Must be user-specified. There is no default value.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.ResultTypeAttribute">
            <summary>
            Used to specify each type of result; for functions having various result types.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.ResultTypeAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the ALinq.Mapping.ResultTypeAttribute class.
            </summary>
            <param name="type">The type of the result returned by a function having various result types.</param>
        </member>
        <member name="P:ALinq.Mapping.ResultTypeAttribute.Type">
            <summary>
            Gets the valid or expected type mapping for a function having various result types.
            </summary>
            <returns>
            The type of result (System.Type).
            </returns>
        </member>
        <member name="T:ALinq.Mapping.UpdateCheck">
            <summary>
            Specifies when objects are to be tested for concurrency conflicts.
            </summary>
        </member>
        <member name="F:ALinq.Mapping.UpdateCheck.Always">
            <summary>
            Always check.
            </summary>
        </member>
        <member name="F:ALinq.Mapping.UpdateCheck.Never">
            <summary>
            Never check.
            </summary>
        </member>
        <member name="F:ALinq.Mapping.UpdateCheck.WhenChanged">
            <summary>
            Check only when the object has been changed.
            </summary>
        </member>
        <member name="T:ALinq.Mapping.ParameterAttribute">
            <summary>
            Enables specification of mapping details for a stored procedure method parameter.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.ParameterAttribute.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.ParameterAttribute class.
            </summary>
        </member>
        <member name="P:ALinq.Mapping.ParameterAttribute.DbType">
            <summary>
            Gets or sets the type of the parameter for a provider-specific database.
            </summary>
            <returns>
            The type as a string.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.ParameterAttribute.Name">
            <summary>
            Gets or sets the name of the parameter.
            </summary>
            <returns>
            The name as a string.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.DatabaseAttribute">
            <summary>
            Specifies certain attributes of a class that represents a database.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.DatabaseAttribute.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.DatabaseAttribute class.
            </summary>
        </member>
        <member name="P:ALinq.Mapping.DatabaseAttribute.Name">
            <summary>
            Gets or sets the name of the database.
            </summary>
            <returns>
            The name.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.AttributeMappingSource">
            <summary>
            A mapping source that uses attributes on the context to create the mapping model.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.AttributeMappingSource.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.AttributeMappingSource class.
            </summary>
        </member>
        <member name="T:ALinq.Mapping.DataAttribute">
            <summary>
            Provides members to describe attributes of data in columns.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.DataAttribute.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.DataAttribute class.
            </summary>
        </member>
        <member name="P:ALinq.Mapping.DataAttribute.Name">
            <summary>
            Gets or sets the name of a column.
            </summary>
            <returns>
            The name.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.DataAttribute.Storage">
            <summary>
            Gets or sets a private storage field to hold the value from a column.
            </summary>
            <returns>
            The name of the storage field.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.ProviderAttribute">
            <summary>
            Specifies which database provider to use.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.ProviderAttribute.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.ProviderAttribute class.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.ProviderAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the ALinq.Mapping.ProviderAttribute class.
            </summary>
            <param name="type">The provider type to use to construct the ALinq.Mapping.ProviderAttribute.</param>
        </member>
        <member name="P:ALinq.Mapping.ProviderAttribute.Type">
            <summary>
            Gets the type of the provider that is used to construct the ALinq.Mapping.ProviderAttribute.
            </summary>
            <returns>
            The type of the provider.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.TableAttribute">
            <summary>
            Designates a class as an entity class that is associated with a database table.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.TableAttribute.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.TableAttribute class.
            </summary>
        </member>
        <member name="P:ALinq.Mapping.TableAttribute.Name">
            <summary>
            Gets or sets the name of the table or view.
            </summary>
            <returns>
            By default, the value is the same as the name of the class.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.ColumnAttribute">
            <summary>
            Associates a class with a column in a database table.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.ColumnAttribute.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.ColumnAttribute class.
            </summary>
        </member>
        <member name="P:ALinq.Mapping.ColumnAttribute.AutoSync">
            <summary>
            Gets or sets the ALinq.Mapping.AutoSync enumeration.
            </summary>
            <returns>
            The ALinq.Mapping.AutoSync value.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.ColumnAttribute.CanBeNull">
            <summary>
            Gets or sets whether a column can contain null values.
            </summary>
            <returns>
            Default = true.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.ColumnAttribute.DbType">
            <summary>
            Gets or sets the type of the database column.
            </summary>
        </member>
        <member name="P:ALinq.Mapping.ColumnAttribute.Expression">
            <summary>
            Gets or sets whether a column is a computed column in a database.
            </summary>
            <returns>
            Default = empty.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.ColumnAttribute.IsDbGenerated">
            <summary>
            Gets or sets whether a column contains values that the database auto-generates.
            </summary>
            <returns>
            Default = false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.ColumnAttribute.IsDiscriminator">
            <summary>
            Gets or sets whether a column contains a discriminator value for a LINQ to SQL inheritance hierarchy.
            </summary>
            <returns>
            Default = false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.ColumnAttribute.IsPrimaryKey">
            <summary>
            Gets or sets whether this class member represents a column that is part or all of the primary key of the table.
            </summary>
            <returns>
            Default = false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.ColumnAttribute.IsVersion">
            <summary>
            Gets or sets whether the column type of the member is a database timestamp or version number.
            </summary>
            <returns>
            Default = false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.ColumnAttribute.UpdateCheck">
            <summary>
            Gets or sets how LINQ to SQL approaches the detection of optimistic concurrency conflicts.
            </summary>
            <returns>
            Default = ALinq.Mapping.UpdateCheck.Always, unless ALinq.Mapping.ColumnAttribute.IsVersion is true for a member.  Other values are ALinq.Mapping.UpdateCheck.Never and ALinq.Mapping.UpdateCheck.WhenChanged.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.MappingSource">
            <summary>
            Represents a source for mapping information.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.MappingSource.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.MappingSource class.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.MappingSource.CreateModel(System.Type)">
            <summary>
            Creates a new mapping model.
            </summary>
            <param name="dataContextType">The type of ALinq.DataContext on which to base the mapping.</param>
            <returns>The meta-model created to match the current mapping scheme.</returns>
        </member>
        <member name="M:ALinq.Mapping.MappingSource.GetModel(System.Type)">
            <summary>
            Returns the mapping model.
            </summary>
            <param name="dataContextType">The type of ALinq.DataContext of the model to be returned.</param>
            <returns>The mapping model associated with this mapping source.</returns>
        </member>
        <member name="T:ALinq.Mapping.MetaAccessor">
            <summary>
            Represents an accessor to a member.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.MetaAccessor.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.MetaAccessor class.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.MetaAccessor.GetBoxedValue(System.Object)">
            <summary>
            Specifies an object on which to set a value or from which to get a value.
            </summary>
            <param name="instance">The instance from which to get the value or on which to set the value.</param>
            <returns>The boxed value of this instance.</returns>
        </member>
        <member name="M:ALinq.Mapping.MetaAccessor.HasAssignedValue(System.Object)">
            <summary>
            Specifies whether the instance has an assigned value.
            </summary>
            <param name="instance">The instance being looked at.</param>
            <returns>true if the instance currently has an assigned value; otherwise, false.</returns>
        </member>
        <member name="M:ALinq.Mapping.MetaAccessor.HasLoadedValue(System.Object)">
            <summary>
            Specifies whether the instance has a value loaded from a deferred source.
            </summary>
            <param name="instance">The instance being looked at.</param>
            <returns>true if the instance currently has a value loaded from a deferred source; otherwise, false.</returns>
        </member>
        <member name="M:ALinq.Mapping.MetaAccessor.HasValue(System.Object)">
            <summary>
            Specifies whether the instance has a loaded or assigned value.
            </summary>
            <param name="instance">The instance being looked at.</param>
            <returns>true if the instance currently has a loaded or assigned value; otherwise, false.</returns>
        </member>
        <member name="M:ALinq.Mapping.MetaAccessor.SetBoxedValue(System.Object@,System.Object)">
            <summary>
            Sets the value as an object.
            </summary>
            <param name="instance">The instance into which to set the value.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="P:ALinq.Mapping.MetaAccessor.Type">
            <summary>
            Gets the type of the member accessed by this accessor.
            </summary>
            <returns>
            The type of the member.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.MetaAccessor`2">
            <summary>
            A strongly typed version of the ALinq.Mapping.MetaAccessor class.
            </summary>
            <typeparam name="TEntity">The type of the source.</typeparam>
            <typeparam name="TMember">The type of the member of that source.</typeparam>
        </member>
        <member name="M:ALinq.Mapping.MetaAccessor`2.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.MetaAccessor&lt;TEntity,TMember&gt; class.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.MetaAccessor`2.GetBoxedValue(System.Object)">
            <summary>
            Specifies an object on which to set a value or from which to get a value.
            </summary>
            <param name="instance">The instance from which to get the value or on which to set the value.</param>
            <returns>The boxed value of this instance.</returns>
        </member>
        <member name="M:ALinq.Mapping.MetaAccessor`2.GetValue(`0)">
            <summary>
            Specifies the strongly typed value.
            </summary>
            <param name="instance">The instance from which to get the value.</param>
            <returns>The value of this instance.</returns>
        </member>
        <member name="M:ALinq.Mapping.MetaAccessor`2.SetBoxedValue(System.Object@,System.Object)">
            <summary>
            Specifies an instance on which to set the boxed value.
            </summary>
            <param name="instance">The instance into which to set the boxed value.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:ALinq.Mapping.MetaAccessor`2.SetValue(`0@,`1)">
            <summary>
            Specifies an instance on which to set the strongly typed value.
            </summary>
            <param name="instance">The instance into which to set the value.</param>
            <param name="value">The strongly typed value to set.</param>
        </member>
        <member name="P:ALinq.Mapping.MetaAccessor`2.Type">
            <summary>
            Gets the type of the member accessed by this accessor.
            </summary>
            <returns>
            The member type.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.MetaAssociation">
            <summary>
            Represents an association relationship between two entity types.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.MetaAssociation.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.MetaAssociation class.
            </summary>
        </member>
        <member name="P:ALinq.Mapping.MetaAssociation.DeleteOnNull">
            <summary>
            Gets whether the object should be deleted when the association is set to null.
            </summary>
            <returns>
            If true, the object is deleted when the association is set to null.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaAssociation.DeleteRule">
            <summary>
            Gets the behavior when the child is deleted.
            </summary>
            <returns>
            The string representing the rule, or null if no action is specified on delete.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaAssociation.IsForeignKey">
            <summary>
            Gets whether the other type is the parent of this type.
            </summary>
            <returns>
            Returns true is the other type is the parent of this type.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaAssociation.IsMany">
            <summary>
            Gets whether the association represents a one-to-many relationship.
            </summary>
            <returns>
            Returns true if the association represents a one-to-many relationship.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaAssociation.IsNullable">
            <summary>
            Gets whether the association can be null.
            </summary>
            <returns>
            Returns true if the association can be null.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaAssociation.IsUnique">
            <summary>
            Gets whether the association is unique.
            </summary>
            <returns>
            Returns true if the association is unique.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaAssociation.OtherKey">
            <summary>
            Gets a list of members that represents the values on the other side of the association.
            </summary>
            <returns>
            Returns a collection representing values on the other side of the association.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey">
            <summary>
            Gets whether the ALinq.Mapping.MetaAssociation.OtherKey forms the identity of the other type.
            </summary>
            <returns>
            true if the ALinq.Mapping.MetaAssociation.OtherKey forms the identity (primary key) of the other type.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaAssociation.OtherMember">
            <summary>
            Gets the member on the other side of this association that represents the reverse association.
            </summary>
            <returns>
            The member on the other side.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaAssociation.OtherType">
            <summary>
            Gets the type on the other side of the association.
            </summary>
            <returns>
            The type.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaAssociation.ThisKey">
            <summary>
            Gets a list of members representing the values on this side of the association.
            </summary>
            <returns>
            A collection.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey">
            <summary>
            Gets whether ALinq.Mapping.MetaAssociation.ThisKey forms the identity of this type.
            </summary>
            <returns>
            true if ALinq.Mapping.MetaAssociation.ThisKey forms the identity (primary key) of the association.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaAssociation.ThisMember">
            <summary>
            Gets the member on this side that represents the association.
            </summary>
            <returns>
            The member.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.MetaDataMember">
            <summary>
            Represents the mapping between a field or a property of a domain object into a column of a database table.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.MetaDataMember.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.MetaDataMember class.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.MetaDataMember.IsDeclaredBy(ALinq.Mapping.MetaType)">
            <summary>
            Specifies whether this member is declared by the specified type.
            </summary>
            <param name="type">The type to check.</param>
            <returns>true if this member is declared by the specified type; otherwise, false.</returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.Association">
            <summary>
            Gets the ALinq.Mapping.MetaAssociation that corresponds to this member.
            </summary>
            <returns>
            The corresponding ALinq.Mapping.MetaAssociation if one exists; otherwise, null.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.AutoSync">
            <summary>
            Gets the read-back behavior for this member for insert and update operations.
            </summary>
            <returns>
            An ALinq.Mapping.AutoSync enumeration.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.CanBeNull">
            <summary>
            Gets whether the value of this member can be assigned the null value.
            </summary>
            <returns>
            true if this member can be assigned the null value; otherwise, false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.DbType">
            <summary>
            Gets the type of the corresponding database column.
            </summary>
            <returns>
            The type of the database column as a string.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.DeclaringType">
            <summary>
            Gets the ALinq.Mapping.MetaType that contains this data member.
            </summary>
            <returns>
            The meta-type that contains the current member.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.DeferredSourceAccessor">
            <summary>
            Gets the accessor that is used to get and set the deferred source of this member.
            </summary>
            <returns>
            The accessor used to access the deferred source for this member.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.DeferredValueAccessor">
            <summary>
            Gets the accessor that is used to get and set the deferred value of this member (without causing fetch).
            </summary>
            <returns>
            The accessor used to access the deferred value for this member.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.Expression">
            <summary>
            Gets the expression that defines a computed column.
            </summary>
            <returns>
            The expression for the computed column as a string.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.IsAssociation">
            <summary>
            Gets whether this member defines an association relationship.
            </summary>
            <returns>
            true if this member defines an association relationship; otherwise, false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.IsDbGenerated">
            <summary>
            Gets whether this member is automatically generated by the database.
            </summary>
            <returns>
            true if this member is automatically generated by the database; otherwise false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.IsDeferred">
            <summary>
            Gets whether the default behavior is to load this member on a deferred basis.
            </summary>
            <returns>
            true if this member loaded on a deferred basis by default; otherwise, false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.IsDiscriminator">
            <summary>
            Gets whether this member represents the inheritance discriminator.
            </summary>
            <returns>
            true if this member represents the inheritance discriminator; otherwise, false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.IsPersistent">
            <summary>
            Gets whether this member is mapped to a column (or constraint).
            </summary>
            <returns>
            true if this member is mapped to a column (or constraint); otherwise, false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.IsPrimaryKey">
            <summary>
            Gets whether this member is part of the type's identity.
            </summary>
            <returns>
            true if this member is part of the type's identity; otherwise, false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.IsVersion">
            <summary>
            Gets whether this member represents the row version or timestamp.
            </summary>
            <returns>
            true if this member represents the row version or timestamp; otherwise, false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.LoadMethod">
            <summary>
            Gets the ALinq.DataContext method that is used to perform load operations.
            </summary>
            <returns>
            The load method as System.Reflection.MethodInfo.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.MappedName">
            <summary>
            Gets the name of the column (or constraint) in the database.
            </summary>
            <returns>
            The name of the column (or constraint) as a string.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.Member">
            <summary>
            Gets the underlying System.Reflection.MemberInfo.
            </summary>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.MemberAccessor">
            <summary>
            Gets the accessor that is used to get or set the value of this member.
            </summary>
            <returns>
            The accessor.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.Name">
            <summary>
            Gets the name of the member, same as the System.Reflection.MemberInfo name.
            </summary>
            <returns>
            The name, same as the System.Reflection.MemberInfo name.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.Ordinal">
            <summary>
            Gets the ordinal position of this member in the default layout of query results.
            </summary>
            <returns>
            The ordinal position.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.StorageAccessor">
            <summary>
            Gets the accessor that is used to get or set the storage value of this member.
            </summary>
            <returns>
            The accessor for the storage value of this member.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.StorageMember">
            <summary>
            Gets the member that stores the data for this member.
            </summary>
            <returns>
            The storage member.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.Type">
            <summary>
            Gets the type of this member.
            </summary>
            <returns>
            The type of the current member.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaDataMember.UpdateCheck">
            <summary>
            Gets the optimistic concurrency check policy for this member.
            </summary>
            <returns>
            An ALinq.Mapping.UpdateCheck enum.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.MetaFunction">
            <summary>
            Represents the mapping between a context method and a database function.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.MetaFunction.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.MetaFunction class.
            </summary>
        </member>
        <member name="P:ALinq.Mapping.MetaFunction.HasMultipleResults">
            <summary>
            Gets whether or not the stored procedure has multiple result types.
            </summary>
            <returns>
            true if the stored procedure has multiple result types.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaFunction.IsComposable">
            <summary>
            Gets whether the function can be composed within a query.
            </summary>
            <returns>
            true if the function can be composed within a query.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaFunction.MappedName">
            <summary>
            Gets the name of the database function or procedure.
            </summary>
            <returns>
            A string representing the name of the database function or procedure.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaFunction.Method">
            <summary>
            Gets the underlying context method.
            </summary>
            <returns>
            A System.Reflection.MethodInfo object that corresponds with the underlying context method.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaFunction.Model">
            <summary>
            Gets the ALinq.Mapping.MetaModel that contains this function.
            </summary>
            <returns>
            The ALinq.Mapping.MetaModel object that contains this function.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaFunction.Name">
            <summary>
            Gets the name of the method.
            </summary>
            <returns>
            A string that represents the name of the method.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaFunction.Parameters">
            <summary>
            Gets an enumeration of the function parameters.
            </summary>
            <returns>
            A collection of the parameters.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaFunction.ResultRowTypes">
            <summary>
            Gets the enumeration of possible result row types.
            </summary>
            <returns>
            A collection of possible types.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaFunction.ReturnParameter">
            <summary>
            Gets the return parameter.
            </summary>
            <returns>
            The ALinq.Mapping.MetaParameter that corresponds to the return parameter.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.MetaModel">
            <summary>
            An abstraction that represents the mapping between a database and domain objects.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.MetaModel.GetFunction(System.Reflection.MethodInfo)">
            <summary>
            Gets the ALinq.Mapping.MetaFunction that corresponds to a database function.
            </summary>
            <param name="method">The method defined on the ALinq.DataContext or subordinate class that represents the database function.</param>
            <returns>The meta-function that corresponds to a database function.</returns>
        </member>
        <member name="M:ALinq.Mapping.MetaModel.GetFunctions">
            <summary>
            Gets an enumeration of all functions.
            </summary>
            <returns>An enumeration that can be used to iterate through all functions.</returns>
        </member>
        <member name="M:ALinq.Mapping.MetaModel.GetMetaType(System.Type)">
            <summary>
            Discovers the ALinq.Mapping.MetaType for the specified System.Type.
            </summary>
            <param name="type">The type for which the ALinq.Mapping.MetaType is sought.</param>
            <returns>A meta-type that corresponds to the specified type.</returns>
        </member>
        <member name="M:ALinq.Mapping.MetaModel.GetTable(System.Type)">
            <summary>
            Gets the ALinq.Mapping.MetaTable associated with a specified System.Type.
            </summary>
            <param name="rowType">The common language runtime (CLR) row type.</param>
            <returns>A meta-table associated with the specified row type.</returns>
        </member>
        <member name="M:ALinq.Mapping.MetaModel.GetTables">
            <summary>
            Get an enumeration of all tables.
            </summary>
            <returns>An enumerator that can be used to iterate over the tables.</returns>
        </member>
        <member name="P:ALinq.Mapping.MetaModel.ContextType">
            <summary>
            Gets the type of ALinq.DataContext type that this model describes.
            </summary>
            <returns>The data context type.</returns>
        </member>
        <member name="P:ALinq.Mapping.MetaModel.DatabaseName">
            <summary>
            Gets the name of the database.
            </summary>
            <returns>
            The database name as a string.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaModel.MappingSource">
            <summary>
            Gets the mapping source that originated this model.
            </summary>
            <returns>The originating mapping source.</returns>
        </member>
        <member name="P:ALinq.Mapping.MetaModel.ProviderType">
            <summary>
            Gets or sets the provider type.
            </summary>
            <returns>The provider type.</returns>
        </member>
        <member name="T:ALinq.Mapping.MetaParameter">
            <summary>
            Represents the mapping between a method parameter and a database function parameter.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.MetaParameter.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.MetaParameter class.
            </summary>
        </member>
        <member name="P:ALinq.Mapping.MetaParameter.DbType">
            <summary>
            Gets the database type of the parameter.
            </summary>
            <returns>
            The database type of the parameter as a string.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaParameter.MappedName">
            <summary>
            Gets the name of the parameter in the database function.
            </summary>
            <returns>
            The name as a string.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaParameter.Name">
            <summary>
            Gets the name of the parameter.
            </summary>
            <returns>The name of the parameter as a string.</returns>
        </member>
        <member name="P:ALinq.Mapping.MetaParameter.Parameter">
            <summary>
            Gets the underlying method parameter.
            </summary>
            <returns>The underlying method parameter.</returns>
        </member>
        <member name="P:ALinq.Mapping.MetaParameter.ParameterType">
            <summary>
            Gets the common language runtime (CLR) type of the parameter.
            </summary>
            <returns>The type.</returns>
        </member>
        <member name="T:ALinq.Mapping.MetaTable">
            <summary>
            Represents an abstraction of a database table or view.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.MetaTable.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.MetaTable class.
            </summary>
        </member>
        <member name="P:ALinq.Mapping.MetaTable.DeleteMethod">
            <summary>
            Gets the ALinq.DataContext method that is used to perform delete operations.
            </summary>
            <returns>
            The System.Reflection.MethodInfo that corresponds to the method used for delete operations.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaTable.InsertMethod">
            <summary>
            Gets the ALinq.DataContext method that is used to perform insert operations.
            </summary>
            <returns>
            The System.Reflection.MethodInfo that corresponds to the method used for insert operations.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaTable.Model">
            <summary>
            Gets the ALinq.Mapping.MetaModel that contains this ALinq.Mapping.MetaTable.
            </summary>
            <returns>
            The ALinq.Mapping.MetaModel that includes this MetaTable.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaTable.RowType">
            <summary>
            Gets the ALinq.Mapping.MetaType that describes the type of the rows of the table.
            </summary>
            <returns>
            The type of rows in the table.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaTable.TableName">
            <summary>
            Gets the name of the table as defined by the database.
            </summary>
            <returns>
            A string representing the name of the table.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaTable.UpdateMethod">
            <summary>
            Gets the ALinq.DataContext method that is used to perform update operations.
            </summary>
            <returns>
            The System.Reflection.MethodInfo that corresponds to the method used for update operations.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.MetaType">
            <summary>
            Represents the mapping of a domain object type to the columns of a database table.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.MetaType.#ctor">
            <summary>
            Initializes a new instance of the ALinq.Mapping.MetaType class.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.MetaType.GetDataMember(System.Reflection.MemberInfo)">
            <summary>
            Gets the ALinq.Mapping.MetaDataMember associated with the specified member.
            </summary>
            <param name="member">The member for which the associated ALinq.Mapping.MetaDataMember is sought.</param>
            <returns>The ALinq.Mapping.MetaDataMember if one is associated with the specified member; otherwise, null.</returns>
        </member>
        <member name="M:ALinq.Mapping.MetaType.GetInheritanceType(System.Type)">
            <summary>
            Gets the ALinq.Mapping.MetaType for an inheritance subtype.
            </summary>
            <param name="type">The subtype.</param>
            <returns>The ALinq.Mapping.MetaType for an inheritance subtype.</returns>
        </member>
        <member name="M:ALinq.Mapping.MetaType.GetTypeForInheritanceCode(System.Object)">
            <summary>
            Gets the meta-type associated with the specified inheritance code.
            </summary>
            <param name="code">The inheritance code.</param>
            <returns>The meta-type associated with the specified inheritance code.</returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.Associations">
            <summary>
            Gets an enumeration of all the associations.
            </summary>
            <returns>
            A collection of associations.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.CanInstantiate">
            <summary>
            Gets whether the underlying type can be instantiated as the result of a query.
            </summary>
            <returns>
            true if the underlying type can be instantiated as the result of a query; otherwise, false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.DataMembers">
            <summary>
            Gets an enumeration of all the data members (fields and properties).
            </summary>
            <returns>
            A collection of the data members.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.DBGeneratedIdentityMember">
            <summary>
            Gets the member that represents the auto-generated identity column.
            </summary>
            <returns>
            The member that represents the auto-generated identity column, or null if there is no auto-generated identity column.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.DerivedTypes">
            <summary>
            Gets an enumeration of the immediate derived types in an inheritance hierarchy.
            </summary>
            <returns>
            An enumeration of meta-types.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.Discriminator">
            <summary>
            Gets the member that represents the inheritance discriminator column.
            </summary>
            <returns>
            The member that represents the inheritance discriminator column, or null if there is none.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.HasAnyLoadMethod">
            <summary>
            Gets a value that indicates whether the current ALinq.Mapping.MetaType or any of its bases types has an OnLoaded method.
            </summary>
            <returns>
            true if the meta-type or any base meta-type has an OnLoaded method; otherwise, false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.HasAnyValidateMethod">
            <summary>
            Gets a value that indicates whether the ALinq.Mapping.MetaType or any of its bases types has an OnValidate method.
            </summary>
            <returns>
            true if the meta-type or any base meta-type has an OnValidate method; otherwise, false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.HasInheritance">
            <summary>
            Gets a value indicating whether the type is part of a mapped inheritance hierarchy.
            </summary>
            <returns>
            true if the type is part of a mapped inheritance hierarchy; otherwise false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.HasInheritanceCode">
            <summary>
            Gets a value indicating whether this type defines an inheritance code.
            </summary>
            <returns>
            true if this type defines an inheritance code; otherwise false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.HasUpdateCheck">
            <summary>
            Gets a value indicating whether the type has any persistent member that may require a test for optimistic concurrency conflicts.
            </summary>
            <returns>
            true if the type has any persistent member with an ALinq.Mapping.UpdateCheck policy other than ALinq.Mapping.UpdateCheck.Never; otherwise false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.IdentityMembers">
            <summary>
            Gets an enumeration of all the data members that define the unique identity of the type.
            </summary>
            <returns>
            An enumeration of members that define the unique identity of the type.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.InheritanceBase">
            <summary>
            Gets the base meta-type in the inheritance hierarchy.
            </summary>
            <returns>
            The base meta-type for the current inheritance hierarchy.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.InheritanceCode">
            <summary>
            Gets a value indicating whether this type defines an inheritance code.
            </summary>
            <returns>
            true if this type defines an inheritance code; otherwise false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.InheritanceDefault">
            <summary>
            Gets a value indicating whether this type is used as the default of an inheritance hierarchy.
            </summary>
            <returns>
            true if this type is used as the default of an inheritance hierarchy; otherwise false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.InheritanceRoot">
            <summary>
            Gets the root type of the inheritance hierarchy.
            </summary>
            <returns>
            The root type.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.InheritanceTypes">
            <summary>
            Gets a collection of all types that are defined by an inheritance hierarchy.
            </summary>
            <returns>
            A collection of meta-types in the current inheritance hierarchy.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.IsEntity">
            <summary>
            Gets a value indicating whether the ALinq.Mapping.MetaType is an entity type.
            </summary>
            <returns>
            true if the ALinq.Mapping.MetaType is an entity type; otherwise false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.IsInheritanceDefault">
            <summary>
            Gets a value indicating whether this type is used as the default of an inheritance hierarchy.
            </summary>
            <returns>
            true if this type is used as the default of an inheritance hierarchy; otherwise false.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.Model">
            <summary>
            Gets the ALinq.Mapping.MetaModel that contains this ALinq.Mapping.MetaType.
            </summary>
            <returns>
            The containing meta-model.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.Name">
            <summary>
            Gets the name of the ALinq.Mapping.MetaType.
            </summary>
            <returns>
            The name of the current meta-type.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.OnLoadedMethod">
            <summary>
            Gets information about the OnLoaded method contained by this meta-type.
            </summary>
            <returns>
            A description of the OnLoaded method for this meta-type.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.OnValidateMethod">
            <summary>
            Gets information about the OnValidate method contained by this meta-type.
            </summary>
            <returns>
            A description of the OnValidate method for this meta-type.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.PersistentDataMembers">
            <summary>
            Gets a collection of all the persistent data members.
            </summary>
            <returns>
            A collection of all the meta-data members in the current type.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.Table">
            <summary>
            Gets the ALinq.Mapping.MetaTable that uses this ALinq.Mapping.MetaType for row definition.
            </summary>
            <returns>
            A meta-table that uses the current meta-type for its row definition.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.Type">
            <summary>
            Gets the underlying common language runtime (CLR) type.
            </summary>
            <returns>
            The associated CLR type.
            </returns>
        </member>
        <member name="P:ALinq.Mapping.MetaType.VersionMember">
            <summary>
            Gets a row-version or timestamp column for this ALinq.Mapping.MetaType.
            </summary>
            <returns>
            The meta-data member that represents the row-version or timestamp column for this meta-type, or null if there is none.
            </returns>
        </member>
        <member name="T:ALinq.Mapping.XmlMappingSource">
            <summary>
            Represents a mapping source that uses an external XML mapping file to create the model.
            </summary>
        </member>
        <member name="M:ALinq.Mapping.XmlMappingSource.FromReader(System.Xml.XmlReader)">
            <summary>
            Creates a mapping source from an XML reader.
            </summary>
            <param name="reader">An XML reader.</param>
            <returns>The new XML mapping source, as type ALinq.Mapping.XmlMappingSource.</returns>
        </member>
        <member name="M:ALinq.Mapping.XmlMappingSource.FromStream(System.IO.Stream)">
            <summary>
            Creates a mapping source from XML in a stream.
            </summary>
            <param name="stream">A stream of XML.</param>
            <returns>The new XML mapping source, as type ALinq.Mapping.XmlMappingSource.</returns>
        </member>
        <member name="M:ALinq.Mapping.XmlMappingSource.FromUrl(System.String)">
            <summary>
            Creates a mapping source from XML that is loaded from a URL.
            </summary>
            <param name="url">The URL pointing to the XML.</param>
            <returns>The new XML mapping source, as type ALinq.Mapping.XmlMappingSource.</returns>
        </member>
        <member name="M:ALinq.Mapping.XmlMappingSource.FromXml(System.String)">
            <summary>
            Creates a mapping source from an XML string.
            </summary>
            <param name="xml">A string that contains XML.</param>
            <returns>The new XML mapping source, as type ALinq.Mapping.XmlMappingSource.</returns>
        </member>
        <member name="T:ALinq.MemberChangeConflict">
            <summary>
            Represents a situation in which an attempted update fails because member values have been updated since the client last read them.
            </summary>
        </member>
        <member name="M:ALinq.MemberChangeConflict.Resolve(ALinq.RefreshMode)">
            <summary>
            Uses a ALinq.RefreshMode parameter to automatically specify the value to set as the current value for the member in conflict.
            </summary>
            <param name="refreshMode">See ALinq.RefreshMode.</param>
        </member>
        <member name="M:ALinq.MemberChangeConflict.Resolve(System.Object)">
            <summary>
            Specifies the value to set as the current value for the member in conflict.
            </summary>
            <param name="value">The value to set as the current value.</param>
        </member>
        <member name="P:ALinq.MemberChangeConflict.CurrentValue">
            <summary>
            Gets the current value of the member in conflict.
            </summary>
            <returns>
            The object in conflict.
            </returns>
        </member>
        <member name="P:ALinq.MemberChangeConflict.DatabaseValue">
            <summary>
            Gets the database value of the member in conflict.
            </summary>
            <returns>
            The value of the object in conflict.
            </returns>
        </member>
        <member name="P:ALinq.MemberChangeConflict.IsModified">
            <summary>
            Gets a value that indicates whether the member data has been changed since the last database read or refresh.
            </summary>
            <returns>
            True if the member data has been changed.
            </returns>
        </member>
        <member name="P:ALinq.MemberChangeConflict.IsResolved">
            <summary>
            Gets a value that indicates whether the conflict has been resolved.
            </summary>
            <returns>
            True if the conflict has been resolved.
            </returns>
        </member>
        <member name="P:ALinq.MemberChangeConflict.Member">
            <summary>
            Gets metadata information about the member in conflict.
            </summary>
            <returns>
            Information about the member in conflict.
            </returns>
        </member>
        <member name="P:ALinq.MemberChangeConflict.OriginalValue">
            <summary>
            Gets the original value of the member in conflict.
            </summary>
            <returns>
            The original value of the member in conflict.
            </returns>
        </member>
        <member name="T:ALinq.Resources.Messages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ALinq.Resources.Messages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ALinq.Resources.Messages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ALinq.Resources.Messages.AssemblyNameNotMatch">
            <summary>
              Looks up a localized string similar to Assembly name is not match, expected &apos;{0}&apos;, acutal &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.Messages.CannotGetAssemblyName">
            <summary>
              Looks up a localized string similar to Cannot get a assembly name from the license file..
            </summary>
        </member>
        <member name="P:ALinq.Resources.Messages.CannotGetLicenseKey">
            <summary>
              Looks up a localized string similar to Cannot get a license key from the license file..
            </summary>
        </member>
        <member name="P:ALinq.Resources.Messages.CannotGetUserName">
            <summary>
              Looks up a localized string similar to Cannot get a user name from the license file..
            </summary>
        </member>
        <member name="P:ALinq.Resources.Messages.LicenseFileErrorFormat">
            <summary>
              Looks up a localized string similar to The license file(ALinq.lic) format is error, please regenerate the license file..
            </summary>
        </member>
        <member name="P:ALinq.Resources.Messages.SoftwareExpired">
            <summary>
              Looks up a localized string similar to This software is expired..
            </summary>
        </member>
        <member name="P:ALinq.Resources.Messages.ValidateLicenseFail">
            <summary>
              Looks up a localized string similar to Validate the license for &apos;{0}&apos; fail..
            </summary>
        </member>
        <member name="T:ALinq.Resources.ALinq">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.ArgumentTypeHasNoIdentityKey">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; has no identity key.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CannotAddChangeConflicts">
            <summary>
              Looks up a localized string similar to Cannot add change conflicts. They are added automatically during SubmitChanges..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CannotAttachAddNonNewEntities">
            <summary>
              Looks up a localized string similar to An attempt has been made to Attach or Add an entity that is not new, perhaps having been loaded from another DataContext.  This is not supported..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CannotAttachAlreadyExistingEntity">
            <summary>
              Looks up a localized string similar to Cannot attach an entity that already exists..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CannotAttachAsModifiedWithoutOriginalState">
            <summary>
              Looks up a localized string similar to An entity can only be attached as modified without original state if it declares a version member or does not have an update check policy..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CannotChangeInheritanceType">
            <summary>
              Looks up a localized string similar to Not allowed: Inheritance discriminator change from &apos;{0}&apos; to &apos;{1}&apos; would change type from &apos;{2}&apos; to &apos;{3}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CannotContainsMethod">
            <summary>
              Looks up a localized string similar to Interface &apos;{0}&apos; cannot contains method &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CannotContainsProperty">
            <summary>
              Looks up a localized string similar to Interface &apos;{0}&apos; cannot contains property &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CannotPerformCUDOnReadOnlyTable">
            <summary>
              Looks up a localized string similar to Can&apos;t perform Create, Update or Delete operations on &apos;{0}&apos; because it has no primary key..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CannotPerformOperationDuringSubmitChanges">
            <summary>
              Looks up a localized string similar to The operation cannot be performed during a call to SubmitChanges..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CannotPerformOperationForUntrackedObject">
            <summary>
              Looks up a localized string similar to The operation cannot be performed for the entity because it is not being change tracked..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CannotPerformOperationOutsideSubmitChanges">
            <summary>
              Looks up a localized string similar to The operation can only be performed inside a user override method during a call to SubmitChanges..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CannotRemoveChangeConflicts">
            <summary>
              Looks up a localized string similar to Cannot remove change conflicts. .
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CannotRemoveUnattachedEntity">
            <summary>
              Looks up a localized string similar to Cannot remove an entity that has not been attached..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CantAddAlreadyExistingItem">
            <summary>
              Looks up a localized string similar to Cannot add an entity that already exists..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CantAddAlreadyExistingKey">
            <summary>
              Looks up a localized string similar to Cannot add an entity with a key that is already in use..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.ColumnMappedMoreThanOnce">
            <summary>
              Looks up a localized string similar to Mapping Problem: The database column &apos;{0}&apos; is mapped more than once..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CouldNotAttach">
            <summary>
              Looks up a localized string similar to Item already exists in data context..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CouldNotConvert">
            <summary>
              Looks up a localized string similar to Could not convert from type &apos;{0}&apos; to type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CouldNotGetTableForSubtype">
            <summary>
              Looks up a localized string similar to Could not retrieve a Table for inheritance subtype &apos;{0}&apos;, try Table of {1} instead..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CouldNotRemoveRelationshipBecauseOneSideCannotBeNull">
            <summary>
              Looks up a localized string similar to An attempt was made to remove a relationship between a {0} and a {1}. However, one of the relationship&apos;s foreign keys ({2}) cannot be set to null..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.CycleDetected">
            <summary>
              Looks up a localized string similar to A cycle was detected in the set of changes.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.DatabaseGeneratedAlreadyExistingKey">
            <summary>
              Looks up a localized string similar to The database generated a key that is already in use..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.DataContextCannotBeUsedAfterDispose">
            <summary>
              Looks up a localized string similar to DataContext accessed after Dispose..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.DbGeneratedChangeNotAllowed">
             <summary>
               Looks up a localized string similar to Value of member &apos;{0}&apos; of an object of type &apos;{1}&apos; changed.
            A member that is computed or generated by the database cannot be changed..
             </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.Decrypt">
            <summary>
              Looks up a localized string similar to ADECRYPT.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.DeferredLoadingRequiresObjectTracking">
            <summary>
              Looks up a localized string similar to Deferred loading requires that object tracking is also enabled..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.DeleteCallbackComment">
            <summary>
              Looks up a localized string similar to --Callback into user code for delete..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.EntityIsTheWrongType">
            <summary>
              Looks up a localized string similar to The entity is not of the correct type..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.EntitySetAlreadyLoaded">
            <summary>
              Looks up a localized string similar to The EntitySet is already loaded and the source cannot be changed..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.EntitySetDataBindingWithAbstractBaseClass">
            <summary>
              Looks up a localized string similar to Cannot add an instance of an abstract class to EntitySet&lt;{0}&gt;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.EntitySetDataBindingWithNonPublicDefaultConstructor">
            <summary>
              Looks up a localized string similar to {0} must have a parameterless constructor when using IBindingList to add new instances..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.EntitySetModifiedDuringEnumeration">
            <summary>
              Looks up a localized string similar to EntitySet was modified during enumeration..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.ExpectedQueryableArgument">
            <summary>
              Looks up a localized string similar to Argument {0} does not implement {1}..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.ExpectedUpdateDeleteOrChange">
            <summary>
              Looks up a localized string similar to Expected update, delete or change..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.IdentityChangeNotAllowed">
             <summary>
               Looks up a localized string similar to Value of member &apos;{0}&apos; of an object of type &apos;{1}&apos; changed.
            A member defining the identity of the object cannot be changed.
            Consider adding a new object with new identity and deleting the existing one instead..
             </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.IncludeCycleNotAllowed">
            <summary>
              Looks up a localized string similar to Cycles not allowed in LoadOptions LoadWith type graph..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.IncludeNotAllowedAfterFreeze">
            <summary>
              Looks up a localized string similar to LoadWith is not allowed after freeze or attach to DataContext..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.InconsistentAssociationAndKeyChange">
            <summary>
              Looks up a localized string similar to The member &apos;{0}&apos; was changed to be inconsistent with the association member &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.InsertAutoSyncFailure">
            <summary>
              Looks up a localized string similar to Member AutoSync failure. For members to be Auto-Synced after insert, the type must either have an auto-generated identity, or a key that is not modified by the database after insert..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.InsertCallbackComment">
            <summary>
              Looks up a localized string similar to --Callback into user code for insert..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.InvalidLoadOptionsLoadMemberSpecification">
            <summary>
              Looks up a localized string similar to The expression specified must be of the form p.A, where p is the parameter and A is a property or field member. .
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.KeyIsWrongSize">
            <summary>
              Looks up a localized string similar to Key is the wrong size. Expected {0}. Actual {1}..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.KeyValueIsWrongType">
            <summary>
              Looks up a localized string similar to Key value is the wrong type. Expected assignable from {0}. Actual {1}..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.LoadOptionsChangeNotAllowedAfterQuery">
            <summary>
              Looks up a localized string similar to Setting load options is not allowed after results have been returned from a query..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.ModifyDuringAddOrRemove">
            <summary>
              Looks up a localized string similar to Could not modify EntitySet..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.NonEntityAssociationMapping">
            <summary>
              Looks up a localized string similar to Invalid association mapping for member &apos;{0}.{1}&apos;.  &apos;{2}&apos; is not an entity..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.NotSupportCultrue">
            <summary>
              Looks up a localized string similar to Current version could not run under Chinese Simplified Culture..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.ObjectTrackingRequired">
            <summary>
              Looks up a localized string similar to Object tracking is not enabled for the current data context instance..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.OptionsCannotBeModifiedAfterQuery">
            <summary>
              Looks up a localized string similar to Data context options cannot be modified after results have been returned from a query..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.OriginalEntityIsWrongType">
            <summary>
              Looks up a localized string similar to The original state instance has the wrong type..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.OwningTeam">
            <summary>
              Looks up a localized string similar to ALinq.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.ProviderDoesNotImplementRequiredInterface">
            <summary>
              Looks up a localized string similar to Specified provider type &apos;{0}&apos; does not implement &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.ProviderTypeNull">
            <summary>
              Looks up a localized string similar to Non-null provider type expected..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.RefreshOfDeletedObject">
            <summary>
              Looks up a localized string similar to Unable to refresh the specified object.  The object no longer exists in the database..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.RowNotFoundOrChanged">
            <summary>
              Looks up a localized string similar to Row not found or changed..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.SubqueryDoesNotSupportOperator">
            <summary>
              Looks up a localized string similar to The operator &apos;{0}&apos; is not supported in Subquery..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.SubqueryMustBeSequence">
            <summary>
              Looks up a localized string similar to Subquery must be a sequence expression..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.SubqueryNotAllowedAfterFreeze">
            <summary>
              Looks up a localized string similar to SetSubquery is not allowed after freeze or attach to DataContext..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.SubqueryNotSupportedOn">
            <summary>
              Looks up a localized string similar to Subquery is not supported on &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.SubqueryNotSupportedOnType">
            <summary>
              Looks up a localized string similar to Subquery is not supported on &apos;{0}&apos; of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.TypeCouldNotBeAdded">
            <summary>
              Looks up a localized string similar to Instance of type &apos;{0}&apos; could not be added. This type is not part of the mapped type system..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.TypeCouldNotBeRemoved">
            <summary>
              Looks up a localized string similar to Instance of type &apos;{0}&apos; could not be removed. This type is not part of the mapped type system..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.TypeCouldNotBeTracked">
            <summary>
              Looks up a localized string similar to Instance of type &apos;{0}&apos; could not be tracked. This type is not part of the mapped type system..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.TypeIsNotEntity">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is not an entity..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.TypeIsNotMarkedAsTable">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is not mapped as a Table..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.UnableToDetermineDataContext">
            <summary>
              Looks up a localized string similar to Unable to determine DataContext for compiled query execution..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.UnhandledBindingType">
            <summary>
              Looks up a localized string similar to Unhandled Binding Type: {0}.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.UnhandledExpressionType">
            <summary>
              Looks up a localized string similar to Unhandled Expression Type: {0}.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.UnrecognizedRefreshObject">
            <summary>
              Looks up a localized string similar to An object specified for refresh is not recognized..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.UpdateCallbackComment">
            <summary>
              Looks up a localized string similar to --Callback into user code for update..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq.UpdatesFailedMessage">
            <summary>
              Looks up a localized string similar to {0} of {1} updates failed..
            </summary>
        </member>
        <member name="T:ALinq.Resources.ALinq_Mapping">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.AbstractClassAssignInheritanceDiscriminator">
            <summary>
              Looks up a localized string similar to Abstract class &apos;{0}&apos; should not be assigned an inheritance discriminator key..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.BadFunctionTypeInMethodMapping">
            <summary>
              Looks up a localized string similar to Mapping Problem: Bad function type in mapping for method &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.BadKeyMember">
            <summary>
              Looks up a localized string similar to Could not find key member &apos;{0}&apos; of key &apos;{1}&apos; on type &apos;{2}&apos;. The key may be wrong or the field or property on &apos;{2}&apos; has changed names..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.BadStorageProperty">
            <summary>
              Looks up a localized string similar to Bad Storage property: &apos;{0}&apos; on member &apos;{1}.{2}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.CannotAccessInterface">
            <summary>
              Looks up a localized string similar to Interface &apos;{0}&apos; is inaccessible..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.CannotGetInheritanceDefaultFromNonInheritanceClass">
            <summary>
              Looks up a localized string similar to Mapping Problem: Cannot get inheritance default from class not mapped into an inheritance hierarchy..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.CouldNotCreateAccessorToProperty">
            <summary>
              Looks up a localized string similar to Could not create PropertyAccessor&lt;{0},{1}&gt; to {2}..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.CouldNotFindElementTypeInModel">
            <summary>
              Looks up a localized string similar to Mapping Problem: Could not find element type in model for &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.CouldNotFindMappingForDataContextType">
            <summary>
              Looks up a localized string similar to Mapping Problem: Cannot find mapping for data context type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.CouldNotFindRequiredAttribute">
            <summary>
              Looks up a localized string similar to Mapping Problem: Could not find required attribute &apos;{0}&apos;: {1}..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.CouldNotFindRuntimeTypeForMapping">
            <summary>
              Looks up a localized string similar to Mapping Problem: Cannot find runtime type for type mapping &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.CouldNotFindTypeFromMapping">
            <summary>
              Looks up a localized string similar to Mapping Problem: Cannot find type &apos;{0}&apos; from mapping..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.DatabaseNodeNotFound">
            <summary>
              Looks up a localized string similar to Database node not found.  Is the mapping namespace ({0}) correctly specified?.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.DataContextTypeMappedMoreThanOnce">
            <summary>
              Looks up a localized string similar to The data context type &apos;{0}&apos; is mapped more than once..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.DiscriminatorClrTypeNotSupported">
            <summary>
              Looks up a localized string similar to Discriminator &apos;{0}.{1}&apos; may not be type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.EntityRefAlreadyLoaded">
            <summary>
              Looks up a localized string similar to The EntityRef is already loaded and the source cannot be changed..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.ExpectedEmptyElement">
            <summary>
              Looks up a localized string similar to Element &apos;{0}&apos; must be empty, but contains a node of type {1} named &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.IdentityClrTypeNotSupported">
            <summary>
              Looks up a localized string similar to Invalid type mapping for Identity member &apos;{0}.{1}&apos;.  Type &apos;{2}&apos; is not supported for identity members..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.IncorrectAutoSyncSpecification">
            <summary>
              Looks up a localized string similar to Incorrect AutoSync specification for member &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.IncorrectNumberOfParametersMappedForMethod">
            <summary>
              Looks up a localized string similar to Mapping Problem: Incorrect number of parameters mapped for method &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.InheritanceCodeMayNotBeNull">
            <summary>
              Looks up a localized string similar to Inheritance code value may not be null..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.InheritanceCodeUsedForMultipleTypes">
            <summary>
              Looks up a localized string similar to The inheritance code &apos;{0}&apos; is used for multiple types..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.InheritanceHierarchyDoesNotDefineDefault">
            <summary>
              Looks up a localized string similar to The inheritance hierarchy rooted at &apos;{0}&apos; does not define a default..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.InheritanceSubTypeIsAlsoRoot">
            <summary>
              Looks up a localized string similar to The inheritance subtype &apos;{0}&apos; is also declared as a root type..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.InheritanceTypeDoesNotDeriveFromRoot">
            <summary>
              Looks up a localized string similar to Inheritance type &apos;{0}&apos; does not derive from inheritance root type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.InheritanceTypeHasMultipleDefaults">
            <summary>
              Looks up a localized string similar to The inheritance type &apos;{0}&apos; has multiple defaults..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.InheritanceTypeHasMultipleDiscriminators">
            <summary>
              Looks up a localized string similar to The inherited type &apos;{0}&apos; cannot have multiple discriminator key values..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.InvalidDeleteOnNullSpecification">
            <summary>
              Looks up a localized string similar to Invalid DeleteOnNull specification for member &apos;{0}&apos;. DeleteOnNull can only be true for singleton association members mapped to non-nullable foreign key columns..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.InvalidFieldInfo">
            <summary>
              Looks up a localized string similar to Could not create FieldAccessor&lt;{0},{1}&gt; from FieldInfo &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.InvalidUseOfGenericMethodAsMappedFunction">
            <summary>
              Looks up a localized string similar to Invalid use of generic method &apos;{0}&apos; as mapped function..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.LinkAlreadyLoaded">
            <summary>
              Looks up a localized string similar to The Link is already loaded and the source cannot be changed..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.MappedMemberHadNoCorrespondingMemberInType">
            <summary>
              Looks up a localized string similar to The column or association &apos;{0}&apos; in the mapping had no corresponding member in type &apos;{1}&apos;. Mapping members from above root type is not supported..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.MappingForTableUndefined">
            <summary>
              Looks up a localized string similar to Mapping Problem: Mapping for table &apos;{0}&apos; is not defined..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.MappingOfInterfacesMemberIsNotSupported">
            <summary>
              Looks up a localized string similar to The mapping of interface member {0}.{1} is not supported..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.MemberMappedMoreThanOnce">
            <summary>
              Looks up a localized string similar to The member &apos;{0}&apos; is mapped more than once..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.MethodCannotBeFound">
            <summary>
              Looks up a localized string similar to Method &apos;{0}&apos; cannot be found..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.MismatchedThisKeyOtherKey">
            <summary>
              Looks up a localized string similar to The number of ThisKey columns is different from the number of OtherKey columns for the association property &apos;{0}&apos; in the type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.MustBeInterface">
            <summary>
              Looks up a localized string similar to The specified type &apos;{0}&apos; must be interface..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.NoDiscriminatorFound">
            <summary>
              Looks up a localized string similar to The inheritance type &apos;{0}&apos; does not declare a discriminator column..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.NonInheritanceClassHasDiscriminator">
            <summary>
              Looks up a localized string similar to The inheritance type &apos;{0}&apos; has a discriminator but is not part of a mapped inheritance hierarchy..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.NoResultTypesDeclaredForFunction">
            <summary>
              Looks up a localized string similar to No result types declared for function &apos;{0}&apos; that returns IMultipleResults..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.OwningTeam">
            <summary>
              Looks up a localized string similar to ALinq.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.PrimaryKeyInSubTypeNotSupported">
            <summary>
              Looks up a localized string similar to The subtype &apos;{0}&apos; cannot contain the primary key member &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.ProviderTypeNotFound">
            <summary>
              Looks up a localized string similar to Specified provider type &apos;{0}&apos; not found..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.TooManyResultTypesDeclaredForFunction">
            <summary>
              Looks up a localized string similar to More than one result type declared for function &apos;{0}&apos; that does not return IMultipleResults..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.TwoMembersMarkedAsInheritanceDiscriminator">
            <summary>
              Looks up a localized string similar to Members &apos;{0}&apos; and &apos;{1}&apos; both marked as inheritance discriminator..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.TwoMembersMarkedAsPrimaryKeyAndDBGenerated">
            <summary>
              Looks up a localized string similar to Members &apos;{0}&apos; and &apos;{1}&apos; both marked as IsPrimaryKey and IsDbGenerated..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.TwoMembersMarkedAsRowVersion">
            <summary>
              Looks up a localized string similar to Members &apos;{0}&apos; and &apos;{1}&apos; both marked as row version..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.TypeNotContainsMember">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; does not contains member &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.UnableToAssignValueToReadonlyProperty">
            <summary>
              Looks up a localized string similar to Unable to assign value to read only property &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.UnableToResolveRootForType">
            <summary>
              Looks up a localized string similar to Mapping Problem: Unable to resolve root for type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.UnexpectedElement">
            <summary>
              Looks up a localized string similar to Expected element &apos;{0}&apos;, but found &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.UnexpectedNull">
            <summary>
              Looks up a localized string similar to Unexpected null &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.UnhandledDeferredStorageType">
            <summary>
              Looks up a localized string similar to Unhandled deferred storage type: {0}..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.UnmappedClassMember">
            <summary>
              Looks up a localized string similar to Class member {0}.{1} is unmapped..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.UnrecognizedAttribute">
            <summary>
              Looks up a localized string similar to Unrecognized attribute &apos;{0}&apos; in mapping file..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_Mapping.UnrecognizedElement">
            <summary>
              Looks up a localized string similar to Unrecognized element &apos;{0}&apos; in mapping file..
            </summary>
        </member>
        <member name="T:ALinq.Resources.ALinq_SqlClient">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ArgumentEmpty">
            <summary>
              Looks up a localized string similar to The string parameter &apos;{0}&apos; was expected to have length greater than zero..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ArgumentTypeMismatch">
            <summary>
              Looks up a localized string similar to One or more type mismatches in argument &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ArgumentWrongType">
            <summary>
              Looks up a localized string similar to The argument &apos;{0}&apos; was the wrong type. Expected &apos;{1}&apos;. Actual &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ArgumentWrongValue">
            <summary>
              Looks up a localized string similar to The argument &apos;{0}&apos; was the wrong value. .
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.BadParameterType">
            <summary>
              Looks up a localized string similar to A query parameter cannot be of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.BadProjectionInSelect">
            <summary>
              Looks up a localized string similar to Bad projection in Select..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.BinaryOperatorNotRecognized">
            <summary>
              Looks up a localized string similar to Binary operator not recognized: {0}.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CannotAggregateType">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is not supported in aggregation operations..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CannotAssignNull">
            <summary>
              Looks up a localized string similar to The null value cannot be assigned to a member with type {0} which is a non-nullable value type..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CannotAssignToMember">
            <summary>
              Looks up a localized string similar to Cannot assign value to member &apos;{0}&apos;. It does not define a setter..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CannotCompareItemsAssociatedWithDifferentTable">
            <summary>
              Looks up a localized string similar to Cannot compare entities associated with different tables..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CannotConvertToEntityRef">
            <summary>
              Looks up a localized string similar to Cannot convert type &apos;{0}&apos; to EntityRef/Link..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CannotDeleteTypesOf">
            <summary>
              Looks up a localized string similar to Cannot delete items of type {0}..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CannotEnumerateResultsMoreThanOnce">
            <summary>
              Looks up a localized string similar to The query results cannot be enumerated more than once..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CannotMaterializeEntityType">
            <summary>
              Looks up a localized string similar to Explicit construction of entity type &apos;{0}&apos; in query is not allowed..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CannotTranslateExpressionToSql">
            <summary>
              Looks up a localized string similar to Cannot translate expression to SQL for this server version..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CapturedValuesCannotBeSequences">
            <summary>
              Looks up a localized string similar to Local sequence cannot be used in LINQ to SQL implementation of query operators except the Contains() operator..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ClassLiteralsNotAllowed">
            <summary>
              Looks up a localized string similar to Class literals are not allowed: {0}..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ClientCaseShouldNotHold">
            <summary>
              Looks up a localized string similar to Client case should not hold &apos;{0}&apos;. It should probably have been SqlSimpleCase..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ClrBoolDoesNotAgreeWithSqlType">
            <summary>
              Looks up a localized string similar to Expected Node with CLR Type of &apos;bool&apos; to have SQL type of &apos;Bit&apos; or &apos;Predicate&apos;. Instead, it was type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ColumnCannotReferToItself">
            <summary>
              Looks up a localized string similar to Column cannot refer to itself..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ColumnClrTypeDoesNotAgreeWithExpressionsClrType">
            <summary>
              Looks up a localized string similar to Column&apos;s ClrType did not agree with its Expression&apos;s ClrType..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ColumnIsDefinedInMultiplePlaces">
            <summary>
              Looks up a localized string similar to Column &apos;{0}&apos; is defined in multiple places..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ColumnIsNotAccessibleThroughDistinct">
            <summary>
              Looks up a localized string similar to Column &apos;{0}&apos; is not accessible through &apos;distinct&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ColumnIsNotAccessibleThroughGroupBy">
            <summary>
              Looks up a localized string similar to Column &apos;{0}&apos; is not accessible through group-by..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ColumnReferencedIsNotInScope">
            <summary>
              Looks up a localized string similar to Column referenced is not in scope: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ComparisonNotSupportedForType">
            <summary>
              Looks up a localized string similar to Comparison operators not supported for type &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CompiledQueryAgainstMultipleShapesNotSupported">
            <summary>
              Looks up a localized string similar to Compiled queries across DataContexts with different LoadOptions not supported..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CompiledQueryCannotReturnType">
            <summary>
              Looks up a localized string similar to A compiled query cannot return type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ConstructedArraysNotSupported">
            <summary>
              Looks up a localized string similar to Constructed arrays are only supported for &apos;Contains&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ContextNotInitialized">
            <summary>
              Looks up a localized string similar to SqlContext is not initialized..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ConvertToCharFromBoolNotSupported">
            <summary>
              Looks up a localized string similar to There is no supported conversion from a Boolean to a Character type..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ConvertToDateTimeOnlyForDateTimeOrString">
            <summary>
              Looks up a localized string similar to Only DateTimes or strings can be converted to DateTime..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CouldNotAssignSequence">
            <summary>
              Looks up a localized string similar to Could not assign sequence of {0} to type {1}..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CouldNotConvertToPropertyOrField">
            <summary>
              Looks up a localized string similar to MemberInfo &apos;{0}&apos; had no corresponding field or property..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CouldNotDetermineCatalogName">
            <summary>
              Looks up a localized string similar to Unable to determine catalog name..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CouldNotDetermineDbGeneratedSqlType">
            <summary>
              Looks up a localized string similar to Unable to determine SQL type for &apos;{0}&apos; that can also be generated by the server..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CouldNotDetermineSqlType">
            <summary>
              Looks up a localized string similar to Unable to determine SQL type for &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CouldNotGetClrType">
            <summary>
              Looks up a localized string similar to Could not get the ClrType..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CouldNotGetSqlType">
            <summary>
              Looks up a localized string similar to Could not get the SqlType..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CouldNotHandleAliasRef">
            <summary>
              Looks up a localized string similar to Could not handle alias ref of {0}..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CouldNotTranslateExpressionForReading">
            <summary>
              Looks up a localized string similar to Could not translate expression &apos;{0}&apos; into SQL and could not treat it as a local expression..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CreateDatabaseFailedBecauseOfClassWithNoMembers">
            <summary>
              Looks up a localized string similar to Unable to create database because mapped class &apos;{0}&apos; has zero members..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CreateDatabaseFailedBecauseOfContextWithNoTables">
            <summary>
              Looks up a localized string similar to Unable to create database because data context &apos;{0}&apos; has no tables..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.CreateDatabaseFailedBecauseSqlCEDatabaseAlreadyExists">
            <summary>
              Looks up a localized string similar to Unable to create database because the database &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.DatabaseDeleteThroughContext">
            <summary>
              Looks up a localized string similar to Operation not allowed after DeleteDatabase call..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.DeferredMemberWrongType">
            <summary>
              Looks up a localized string similar to Deferred member not one of EntitySet, EntityRef or Link..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.DidNotExpectAs">
            <summary>
              Looks up a localized string similar to Did not expect &apos;as&apos; operator in &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.DidNotExpectTypeBinding">
            <summary>
              Looks up a localized string similar to Did not expect type binding back. This should result in a type case not a simple case..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.DidNotExpectTypeChange">
            <summary>
              Looks up a localized string similar to Did not expect operation to change result type. Original type was &apos;{0}&apos; new type is &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.DistributedTransactionsAreNotAllowed">
            <summary>
              Looks up a localized string similar to Distributed transactions are not allowed..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.EmptyCaseNotSupported">
            <summary>
              Looks up a localized string similar to Empty case is not supported..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ExceptNotSupportedForHierarchicalTypes">
            <summary>
              Looks up a localized string similar to &apos;Except&apos; is not supported for hierarchical result types..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ExpectedBitFoundPredicate">
            <summary>
              Looks up a localized string similar to Expected a &apos;Bit&apos; here but found a &apos;Predicate&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ExpectedClrTypesToAgree">
            <summary>
              Looks up a localized string similar to Expected Clr Types to agree. One was &apos;{0}&apos; the other was &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ExpectedNoObjectType">
            <summary>
              Looks up a localized string similar to Expected no ObjectType nodes to remain..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ExpectedPredicateFoundBit">
            <summary>
              Looks up a localized string similar to Expected a &apos;Predicate&apos; here but found a &apos;Bit&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ExpectedQueryableArgument">
            <summary>
              Looks up a localized string similar to Expected type &apos;{0}&apos; of argument &apos;{1}&apos; to implement IQueryable of &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ExpressionNotDeferredQuerySource">
            <summary>
              Looks up a localized string similar to Expression is not a deferred query source..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.GeneralCollectionMaterializationNotSupported">
            <summary>
              Looks up a localized string similar to General collection materialization is not supported..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.GroupingNotSupportedAsOrderCriterion">
            <summary>
              Looks up a localized string similar to A grouping cannot be used as an order criterion; you may want to use its key instead..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.IifReturnTypesMustBeEqual">
            <summary>
              Looks up a localized string similar to The IIF method returns two separate types: {0}, {1}.  Translation to SQL does not support different return types..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.Impossible">
            <summary>
              Looks up a localized string similar to Should not have reached this point..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.IndexOfWithStringComparisonArgNotSupported">
            <summary>
              Looks up a localized string similar to The translation of String.IndexOf to SQL does not support versions with a StringComparison argument..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.InfiniteDescent">
            <summary>
              Looks up a localized string similar to Descent limit exceeded..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.InsertItemMustBeConstant">
            <summary>
              Looks up a localized string similar to The item of an insert must be a constant value expression..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.IntersectNotSupportedForHierarchicalTypes">
            <summary>
              Looks up a localized string similar to &apos;Intersect&apos; is not supported for hierarchical result types..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.InvalidConnectionArgument">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; must be string, or DbConnection..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.InvalidDbGeneratedType">
            <summary>
              Looks up a localized string similar to The primary key column of type &apos;{0}&apos; cannot be generated by the server. .
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.InvalidFormatNode">
            <summary>
              Looks up a localized string similar to Could not format node &apos;{0}&apos; for execution as SQL..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.InvalidGroupByExpression">
            <summary>
              Looks up a localized string similar to The group by operation contains an expression that cannot be translated..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.InvalidGroupByExpressionType">
            <summary>
              Looks up a localized string similar to A group by expression can only contain non-constant scalars that are comparable by the server. The expression with type &apos;{0}&apos; is not comparable..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.InvalidMethodExecution">
            <summary>
              Looks up a localized string similar to The method &apos;{0}&apos; is not mapped as a stored procedure or user-defined function..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.InvalidOrderByExpression">
            <summary>
              Looks up a localized string similar to An order by expression can only contain non-constant scalars that are order comparable by the server. The expression with type &apos;{0}&apos; is not order comparable..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.InvalidProviderType">
            <summary>
              Looks up a localized string similar to The specified type &apos;{0}&apos; is not a valid provider type..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.InvalidReferenceToRemovedAliasDuringDeflation">
            <summary>
              Looks up a localized string similar to Reference to removed alias discovered during deflation..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.InvalidReturnFromSproc">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid return type for a mapped stored procedure method..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.InvalidSequenceOperatorCall">
            <summary>
              Looks up a localized string similar to Sequence operator call is only valid for Sequence, Queryable or DataQueryExtensions not for &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.LastIndexOfWithStringComparisonArgNotSupported">
            <summary>
              Looks up a localized string similar to The translation of String.LastIndexOf to SQL does not support versions with a StringComparison argument..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.LenOfTextOrNTextNotSupported">
            <summary>
              Looks up a localized string similar to Translation would contain LEN of Text or NText arguments: {0}.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.LogAttemptingToDeleteDatabase">
            <summary>
              Looks up a localized string similar to Attempting to delete the database &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.LogGeneralInfoMessage">
            <summary>
              Looks up a localized string similar to {0}: {1}..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.LogStoredProcedureExecution">
            <summary>
              Looks up a localized string similar to Execute stored procedure: {0}({1})..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.MappedTypeMustHaveDefaultConstructor">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; must declare a default (parameterless) constructor in order to be constructed during mapping..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.MathRoundNotSupported">
            <summary>
              Looks up a localized string similar to For translation to SQL, the Math.Round method needs a MidpointRounding parameter. Use &apos;AwayFromZero&apos; to specify the SQL function ROUND..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.MaxSizeNotSupported">
            <summary>
              Looks up a localized string similar to Translation would contain an out parameter of type Text, NText or Image: {0}.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.MemberAccessIllegal">
            <summary>
              Looks up a localized string similar to Member access &apos;{0}&apos; of &apos;{1}&apos; not legal on type &apos;{2}..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.MemberCannotBeTranslated">
            <summary>
              Looks up a localized string similar to The member &apos;{0}.{1}&apos; has no supported translation to SQL..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.MemberCouldNotBeTranslated">
            <summary>
              Looks up a localized string similar to Member &apos;{0}.{1}&apos; could not be translated..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.MemberNotPartOfProjection">
            <summary>
              Looks up a localized string similar to Binding error: Member &apos;{0}.{1}&apos; not found in projection..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.MethodFormHasNoSupportConversionToSql">
            <summary>
              Looks up a localized string similar to The method &apos;{0}&apos; has a translation to SQL, but the overload &apos;{1}&apos; does not..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.MethodHasNoSupportConversionToSql">
            <summary>
              Looks up a localized string similar to Method &apos;{0}&apos; has no supported translation to SQL..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.MethodNotMappedToStoredProcedure">
            <summary>
              Looks up a localized string similar to The method specified ({0}) is not mapped to a stored procedure..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.NoMethodInTypeMatchingArguments">
            <summary>
              Looks up a localized string similar to No method in type &apos;{0}&apos; matching arguments..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.NonConstantExpressionsNotSupportedFor">
            <summary>
              Looks up a localized string similar to Only arguments that can be evaluated on the client are supported for the {0} method..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.NonConstantExpressionsNotSupportedForRounding">
            <summary>
              Looks up a localized string similar to Only arguments that can be evaluated on the client are supported for the MidpointRounding argument in Math.Round..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.NonCountAggregateFunctionsAreNotValidOnProjections">
            <summary>
              Looks up a localized string similar to Parameterless aggregate operator &apos;{0}&apos; is not supported over projections..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.OwningTeam">
            <summary>
              Looks up a localized string similar to ALinq.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ParameterNotInScope">
            <summary>
              Looks up a localized string similar to The parameter &apos;{0}&apos; is not in scope..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ParametersCannotBeSequences">
            <summary>
              Looks up a localized string similar to Parameters cannot be sequences..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ProviderCannotBeUsedAfterDispose">
            <summary>
              Looks up a localized string similar to Provider cannot be accessed after Dispose..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ProviderNotInstalled">
            <summary>
              Looks up a localized string similar to Cannot open &apos;{0}&apos;. Provider &apos;{1}&apos; not installed..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.QueryOnLocalCollectionNotSupported">
            <summary>
              Looks up a localized string similar to Queries with local collections are not supported.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.QueryOperatorNotSupported">
            <summary>
              Looks up a localized string similar to The query operator &apos;{0}&apos; is not supported..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.QueryOperatorOverloadNotSupported">
            <summary>
              Looks up a localized string similar to Unsupported overload used for query operator &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ReaderUsedAfterDispose">
            <summary>
              Looks up a localized string similar to Reader used after dispose..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.RequiredColumnDoesNotExist">
            <summary>
              Looks up a localized string similar to The required column &apos;{0}&apos; does not exist in the results..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ResultTypeNotMappedToFunction">
            <summary>
              Looks up a localized string similar to Result type &apos;{0}&apos; is not mapped to function &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.SelectManyDoesNotSupportStrings">
            <summary>
              Looks up a localized string similar to SelectMany does not support strings..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.SequenceOperatorsNotSupportedForType">
            <summary>
              Looks up a localized string similar to Sequence operators not supported for type &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.SimpleCaseShouldNotHold">
            <summary>
              Looks up a localized string similar to Simple case should not hold &apos;{0}&apos; should probably have been SqlClientCase..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.SkipIsValidOnlyOverOrderedQueries">
            <summary>
              Looks up a localized string similar to The Skip() operator is valid only over ordered queries..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.SkipNotSupportedForSequenceTypes">
            <summary>
              Looks up a localized string similar to The Skip operator is not supported for sequences containing sequences (with the exception of IGrouping under SQL Server 2005)..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.SkipRequiresSingleTableQueryWithPKs">
            <summary>
              Looks up a localized string similar to This provider supports Skip() only over ordered queries returning entities or projections that contain all identity columns, where the query is a single-table (non-join) query, or is a Distinct, Except, Intersect, or Union (not Concat) operation..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.SourceExpressionAnnotation">
            <summary>
              Looks up a localized string similar to Source Expression: {0}.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.SprocsCannotBeComposed">
            <summary>
              Looks up a localized string similar to Stored Procedures cannot be used inside queries..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.SqlMethodOnlyForSql">
            <summary>
              Looks up a localized string similar to Method &apos;{0}&apos; cannot be used on the client; it is only for translation to SQL..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.TextNTextAndImageCannotOccurInDistinct">
            <summary>
              Looks up a localized string similar to Translation would contain an expression of type Text, NText or Image in a SELECT DISTINCT clause: {0}.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.TextNTextAndImageCannotOccurInUnion">
            <summary>
              Looks up a localized string similar to Translation would contain an expression of type Text, NText or Image in a SELECT within a UNION: {0}.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ToStringOnlySupportedForPrimitiveTypes">
            <summary>
              Looks up a localized string similar to Method ToString can only be translated to SQL for primitive types..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.TransactionDoesNotMatchConnection">
            <summary>
              Looks up a localized string similar to Transaction does not match connection..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.TypeBinaryOperatorNotRecognized">
            <summary>
              Looks up a localized string similar to Type Binary operator not recognized..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.TypeCannotBeOrdered">
            <summary>
              Looks up a localized string similar to Cannot order by type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.TypeColumnWithUnhandledSource">
            <summary>
              Looks up a localized string similar to Type column with unhandled source.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnableToBindUnmappedMember">
            <summary>
              Looks up a localized string similar to Binding error: Member &apos;{0}.{1}&apos; is not a mapped member of &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnexpectedFloatingColumn">
            <summary>
              Looks up a localized string similar to Column declaration found outside row or table declaration..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnexpectedNode">
            <summary>
              Looks up a localized string similar to Unexpected node: {0}.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnexpectedSharedExpression">
            <summary>
              Looks up a localized string similar to Unexpected shared-expression found..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnexpectedSharedExpressionReference">
            <summary>
              Looks up a localized string similar to Unexpected shared-expression reference found..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnexpectedTypeCode">
            <summary>
              Looks up a localized string similar to Unexpected type code: {0}.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnhandledBindingType">
            <summary>
              Looks up a localized string similar to Unhandled binding type: {0}.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnhandledExpressionType">
            <summary>
              Looks up a localized string similar to Unhandled Expression Type: {0}.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnhandledMemberAccess">
            <summary>
              Looks up a localized string similar to Member &apos;{0}&apos; on node type &apos;{1}&apos; does not have a known translation to SQL..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnhandledStringTypeComparison">
            <summary>
              Looks up a localized string similar to SQL Server does not handle comparison of NText, Text, Xml, or Image data types..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnionDifferentMemberOrder">
            <summary>
              Looks up a localized string similar to Types in Union or Concat have members assigned in different order..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnionDifferentMembers">
            <summary>
              Looks up a localized string similar to Types in Union or Concat have different members assigned..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnionIncompatibleConstruction">
            <summary>
              Looks up a localized string similar to Types in Union or Concat are constructed incompatibly..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnionOfIncompatibleDynamicTypes">
            <summary>
              Looks up a localized string similar to Sources of type (GetType() or typeof) are incompatible for Union-like operation..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnionWithHierarchy">
            <summary>
              Looks up a localized string similar to Types in Union or Concat cannot be constructed with hierarchy..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnmappedDataMember">
            <summary>
              Looks up a localized string similar to Data member &apos;{0}&apos; of type &apos;{1}&apos; is not part of the mapping for type &apos;{2}&apos;. Is the member above the root of an inheritance hierarchy?.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnrecognizedExpressionNode">
            <summary>
              Looks up a localized string similar to Unrecognized expression node: {0}.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnrecognizedProviderMode">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid provider mode..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnsafeStringConversion">
            <summary>
              Looks up a localized string similar to Unsafe string conversion from {0} to {1} may lead to implicit truncation.  Try reshaping the string explicitly with a Substring operation..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnsupportedDateTimeConstructorForm">
            <summary>
              Looks up a localized string similar to DateTime constructor form is not supported..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnsupportedDateTimeOffsetConstructorForm">
            <summary>
              Looks up a localized string similar to DateTimeOffset constructor form is not supported..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnsupportedNodeType">
            <summary>
              Looks up a localized string similar to The node type &apos;{0}&apos; is not supported..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnsupportedStringConstructorForm">
            <summary>
              Looks up a localized string similar to String constructor form is not supported..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnsupportedTimeSpanConstructorForm">
            <summary>
              Looks up a localized string similar to TimeSpan constructor form is not supported..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UnsupportedTypeConstructorForm">
            <summary>
              Looks up a localized string similar to Constructor for server type &apos;{0}&apos; is not supported..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.UpdateItemMustBeConstant">
            <summary>
              Looks up a localized string similar to The item of an update must be a constant value expression..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.ValueHasNoLiteralInSql">
            <summary>
              Looks up a localized string similar to Value has no literal in SQL: {0}.
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.VbLikeDoesNotSupportMultipleCharacterRanges">
            <summary>
              Looks up a localized string similar to Cannot translate multiple character ranges in the pattern argument..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.VbLikeUnclosedBracket">
            <summary>
              Looks up a localized string similar to Pattern contains unclosed bracket..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.WrongDataContext">
            <summary>
              Looks up a localized string similar to The query contains references to items defined on a different data context..
            </summary>
        </member>
        <member name="P:ALinq.Resources.ALinq_SqlClient.WrongNumberOfValuesInCollectionArgument">
            <summary>
              Looks up a localized string similar to Wrong number of values in &apos;{0}&apos;. Expected {1}. Actually {2}..
            </summary>
        </member>
        <member name="T:ALinq.ModifiedMemberInfo">
            <summary>
            Holds values of members that have been modified in LINQ to SQL applications.
            </summary>
        </member>
        <member name="P:ALinq.ModifiedMemberInfo.Member">
            <summary>
            Gets member information for the modified member.
            </summary>
            <returns>
            Information about the member in conflict.
            </returns>
        </member>
        <member name="P:ALinq.ModifiedMemberInfo.CurrentValue">
            <summary>
            Gets the current value of the modified member.
            </summary>
            <returns>
            The value of the member.
            </returns>
        </member>
        <member name="P:ALinq.ModifiedMemberInfo.OriginalValue">
            <summary>
            Gets the original value of the modified member.
            </summary>
            <returns>
            The original value for the modified member.
            </returns>
        </member>
        <member name="T:ALinq.SqlClient.Sql2000Provider">
            <summary>
            Contains functionality to connect to and communicate with a SQL Server 2000.
            </summary>
        </member>
        <member name="M:ALinq.SqlClient.Sql2000Provider.#ctor">
            <summary>
            Initializes a new instance of the ALinq.SqlClient.Sql2000Provider class.
            </summary>
        </member>
        <member name="T:ALinq.SqlClient.SqlProvider">
            <summary>
             Contains functionality to connect to and communicate with a SQL Server.
            </summary>
        </member>
        <member name="M:ALinq.SqlClient.SqlProvider.Execute(System.Linq.Expressions.Expression)">
            <summary>
             Executes the query represented by a specified expression tree.
            </summary>
            <param name="query">An expression tree that represents a LINQ query.</param>
            <returns>The value that results from executing the specified query.</returns>
        </member>
        <member name="T:ALinq.SqlClient.Sql2005Provider">
            <summary>
            Contains functionality to connect to and communicate with a SQL Server 2005.
            </summary>
        </member>
        <member name="M:ALinq.SqlClient.Sql2005Provider.#ctor">
            <summary>
            Initializes a new instance of the ALinq.SqlClient.Sql2005Provider class.
            </summary>
        </member>
        <member name="P:ALinq.SqlClient.SqlUpdate.IsInsert">
            <summary>
            HACK:用来实现匿名类的插入，如：db.Employees.Insert(o=> new { }) 。 
            </summary>
        </member>
        <member name="T:ALinq.SqlClient.SqlRetyper">
            <summary>
            Change the sql type to match.
            </summary>
        </member>
        <member name="T:ALinq.SqlClient.Implementation.ObjectMaterializer`1">
            <summary>
            Defines methods for dynamically materializing objects.
            </summary>
            <typeparam name="TDataReader">The type of the data reader.</typeparam>
        </member>
        <member name="F:ALinq.SqlClient.Implementation.ObjectMaterializer`1.Arguments">
            <summary>
            Captures internal state for the fast materializer.
            </summary>
        </member>
        <member name="F:ALinq.SqlClient.Implementation.ObjectMaterializer`1.BufferReader">
            <summary>
            Represents a reader that reads data rows in a forward-only manner.
            </summary>
        </member>
        <member name="F:ALinq.SqlClient.Implementation.ObjectMaterializer`1.DataReader">
            <summary>
            Represents a data reader.
            </summary>
        </member>
        <member name="F:ALinq.SqlClient.Implementation.ObjectMaterializer`1.Globals">
            <summary>
            Captures internal state for the fast materializer.
            </summary>
        </member>
        <member name="F:ALinq.SqlClient.Implementation.ObjectMaterializer`1.Locals">
            <summary>
            Captures internal state for the fast materializer.
            </summary>
        </member>
        <member name="F:ALinq.SqlClient.Implementation.ObjectMaterializer`1.Ordinals">
            <summary>
            Represents column ordinals of a data reader.
            </summary>
        </member>
        <member name="M:ALinq.SqlClient.Implementation.ObjectMaterializer`1.#ctor">
            <summary>
            Initializes a new instance of the ALinq.SqlClient.Implementation.ObjectMaterializer&lt;TDataReader&gt; class.
            </summary>
        </member>
        <member name="M:ALinq.SqlClient.Implementation.ObjectMaterializer`1.Convert``1(System.Collections.IEnumerable)">
            <summary>
            Changes the type of each element in a specified sequence.
            </summary>
            <typeparam name="TOutput">The type to convert the elements to.</typeparam>
            <param name="source">A sequence that contains elements to convert.</param>
            <returns>A sequence that contains the type-converted elements.</returns>
        </member>
        <member name="M:ALinq.SqlClient.Implementation.ObjectMaterializer`1.CreateGroup``2(``0,System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Creates a group from a specified key and collection of values.
            </summary>
            <typeparam name="TKey">The type of the key of the group.</typeparam>
            <typeparam name="TElement">The type of the values in the group.</typeparam>
            <param name="key">The key for the group.</param>
            <param name="items">The values for the group.</param>
            <returns>A group that has the specified key and the specified collection of values.</returns>
        </member>
        <member name="M:ALinq.SqlClient.Implementation.ObjectMaterializer`1.CreateOrderedEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an ordered sequence from a specified collection of values.
            </summary>
            <typeparam name="TElement">The type of the values in the ordered sequence.</typeparam>
            <param name="items">The values to put in the ordered sequence.</param>
            <returns>An ordered sequence that contains the specified values.</returns>
        </member>
        <member name="M:ALinq.SqlClient.Implementation.ObjectMaterializer`1.ErrorAssignmentToNull(System.Type)">
            <summary>
            Returns an exception that indicates that a null value was tried to be assigned to a non-nullable value type.
            </summary>
            <param name="type">The type to which a null value was attempted to be assigned.</param>
            <returns>An exception that indicates that a null value was attempted to be assigned to a non-nullable value type.</returns>
        </member>
        <member name="M:ALinq.SqlClient.Implementation.ObjectMaterializer`1.ExecuteSubQuery(System.Int32,System.Object[])">
            <summary>
            When overridden in a derived class, executes a query.
            </summary>
            <param name="iSubQuery">The index of the query.</param>
            <param name="args">The arguments to the query.</param>
            <returns>The results from executing the query.</returns>
        </member>
        <member name="M:ALinq.SqlClient.Implementation.ObjectMaterializer`1.GetLinkSource``1(System.Int32,System.Int32,System.Object[])">
            <summary>
            When overridden in a derived class, creates a new deferred source.
            </summary>
            <typeparam name="T">The type of the result elements.</typeparam>
            <param name="globalLink">The index of the link.</param>
            <param name="localFactory">The index of the factory.</param>
            <param name="keyValues">The key values for the deferred source.</param>
            <returns>An enumerable deferred source.</returns>
        </member>
        <member name="M:ALinq.SqlClient.Implementation.ObjectMaterializer`1.GetNestedLinkSource``1(System.Int32,System.Int32,System.Object)">
            <summary>
            When overridden in a derived class, creates a new deferred source.
            </summary>
            <typeparam name="T">The type of the result elements.</typeparam>
            <param name="globalLink">The index of the link.</param>
            <param name="localFactory">The index of the factory.</param>
            <param name="instance">The instance for the deferred source.</param>
            <returns>An enumerable deferred source.</returns>
        </member>
        <member name="M:ALinq.SqlClient.Implementation.ObjectMaterializer`1.InsertLookup(System.Int32,System.Object)">
            <summary>
            When overridden in a derived class, inserts a value into a data structure.
            </summary>
            <param name="globalMetaType">The index of the ALinq.Mapping.MetaType.</param>
            <param name="instance">The object to insert into the data structure.</param>
            <returns>The value that was inserted into the data structure.</returns>
        </member>
        <member name="M:ALinq.SqlClient.Implementation.ObjectMaterializer`1.Read">
            <summary>
            When overridden in a derived class, advances the reader to the next record.
            </summary>
            <returns>true if there are more rows; otherwise, false.</returns>
        </member>
        <member name="M:ALinq.SqlClient.Implementation.ObjectMaterializer`1.SendEntityMaterialized(System.Int32,System.Object)">
            <summary>
            When overridden in a derived class, invokes the method represented by ALinq.Mapping.MetaType.OnLoadedMethod.
            </summary>
            <param name="globalMetaType">The index of the ALinq.Mapping.MetaType.</param>
            <param name="instance">The parameter to pass to the invoked method.</param>
        </member>
        <member name="P:ALinq.SqlClient.Implementation.ObjectMaterializer`1.CanDeferLoad">
            <summary>
            When overridden in a derived class, gets a value that indicates whether deferred loading is enabled.
            </summary>
            <returns>
            true if deferred loading is enabled; otherwise, false.
            </returns>
        </member>
        <member name="T:ALinq.SqlClient.SqlHelpers">
            <summary>
            Provides helper methods for operations that match string patterns.
            </summary>
        </member>
        <member name="M:ALinq.SqlClient.SqlHelpers.GetStringContainsPattern(System.String,System.Char)">
            <summary>
            Creates a search pattern string where the specified text can have other text before and following it.
            </summary>
            <param name="text">The string to insert into the search pattern string.</param>
            <param name="escape">The character to use to escape wildcard characters.</param>
            <returns>A search pattern string that contains the specified string and the '%' character before and after it.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlHelpers.GetStringEndsWithPattern(System.String,System.Char)">
            <summary>
            Creates a search pattern string where the specified text can have other text before it but not following it.
            </summary>
            <param name="text">The string to insert into the search pattern string.</param>
            <param name="escape">The character to use to escape wildcard characters.</param>
            <returns>A search pattern string that contains the '%' character followed by the specified string.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlHelpers.GetStringStartsWithPattern(System.String,System.Char)">
            <summary>
            Creates a search pattern string where the specified text can have other text after it but not before it.
            </summary>
            <param name="text">The string to insert into the search pattern string.</param>
            <param name="escape">The character to use to escape wildcard characters.</param>
            <returns>A search pattern string that contains the specified string followed by the '%' character.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlHelpers.TranslateVBLikePattern(System.String,System.Char)">
            <summary>
            Translates a search pattern for the Visual Basic Like operator to a search pattern for the SQL Server LIKE operator.
            </summary>
            <param name="pattern">The Visual Basic Like search pattern to translate to a SQL Server LIKE search pattern.</param>
            <param name="escape">The character to use to escape special SQL characters or the escape character itself.</param>
            <returns>A search pattern for the SQL Server LIKE operator that corresponds to the specified Visual Basic Like search pattern.</returns>
        </member>
        <member name="T:ALinq.SqlClient.SqlMethods">
            <summary>
            Provides methods that correspond to SQL Server functions. Methods in the ALinq.SqlClient.SqlMethods class are only supported in LINQ to SQL queries.
            </summary>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.DateDiffDay(System.DateTime,System.DateTime)">
            <summary>
            Counts the number of day boundaries between two non-nullable dates.
            </summary>
            <param name="startDate">The start date for the time period.</param>
            <param name="endDate">The end date for the time period.</param>
            <returns>The number of day boundaries between the two specified dates.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.DateDiffDay(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Counts the number of day boundaries between two nullable dates.
            </summary>
            <param name="startDate">The start date for the time period.</param>
            <param name="endDate">The end date for the time period.</param>
            <returns>When both parameters are not null, returns the number of day boundaries between the two specified dates. When one or both parameters are null, returns a null value.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.DateDiffHour(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Counts the number of hour boundaries between two nullable dates.
            </summary>
            <param name="startDate">The start date for the time period.</param>
            <param name="endDate">The end date for the time period.</param>
            <returns>When both parameters are not null, returns the number of hour boundaries between the two specified dates. When one or both parameters are null, returns a null value.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.DateDiffHour(System.DateTime,System.DateTime)">
            <summary>
            Counts the number of hour boundaries between two non-nullable dates.
            </summary>
            <param name="startDate">The start date for the time period.</param>
            <param name="endDate">The end date for the time period.</param>
            <returns>The number of hour boundaries between the two specified dates.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.DateDiffMillisecond(System.DateTime,System.DateTime)">
            <summary>
            Counts the number of microsecond boundaries between two non-nullable dates.
            </summary>
            <param name="startDate">The start date for the time period.</param>
            <param name="endDate">The end date for the time period.</param>
            <returns>The number of microsecond boundaries between the two specified dates.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.DateDiffMillisecond(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Counts the number of microsecond boundaries between two nullable dates.
            </summary>
            <param name="startDate">The start date for the time period.</param>
            <param name="endDate">The end date for the time period.</param>
            <returns>When both parameters are not null, returns the number of microsecond boundaries between the two specified dates. When one or both parameters are null, returns a null value.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.DateDiffMinute(System.DateTime,System.DateTime)">
            <summary>
            Counts the number of minute boundaries between two non-nullable dates.
            </summary>
            <param name="startDate">The start date for the time period.</param>
            <param name="endDate">The end date for the time period.</param>
            <returns>The number of minute boundaries between the two specified dates.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.DateDiffMinute(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Counts the number of minute boundaries between two nullable dates.
            </summary>
            <param name="startDate">The start date for the time period.</param>
            <param name="endDate">The end date for the time period.</param>
            <returns>When both parameters are not null, returns the number of minute boundaries between the two specified dates. When one or both parameters are null, returns a null value.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.DateDiffMonth(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Counts the number of month boundaries between two nullable dates.
            </summary>
            <param name="startDate">The start date for the time period.</param>
            <param name="endDate">The end date for the time period.</param>
            <returns>When both parameters are not null, returns the number of month boundaries between the two specified dates. When one or both parameters are null, returns a null value.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.DateDiffMonth(System.DateTime,System.DateTime)">
            <summary>
            Counts the number of month boundaries between two non-nullable dates.
            </summary>
            <param name="startDate">The start date for the time period.</param>
            <param name="endDate">The end date for the time period.</param>
            <returns>The number of month boundaries between the two specified dates.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.DateDiffSecond(System.DateTime,System.DateTime)">
            <summary>
            Counts the number of second boundaries between two non-nullable dates.
            </summary>
            <param name="startDate">The start date for the time period.</param>
            <param name="endDate">The end date for the time period.</param>
            <returns>The number of second boundaries between the two specified dates.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.DateDiffSecond(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Counts the number of second boundaries between two nullable dates.
            </summary>
            <param name="startDate">The start date for the time period.</param>
            <param name="endDate">The end date for the time period.</param>
            <returns>When both parameters are not null, returns the number of second boundaries between the two specified dates is returned. When one or both parameters are null, returns a null value.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.DateDiffYear(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Counts the number of year boundaries between two nullable dates.
            </summary>
            <param name="startDate">The start date for the time period.</param>
            <param name="endDate">The end date for the time period.</param>
            <returns>When both parameters are not null, returns the number of year boundaries between the two specified dates. When one or both parameters are null, returns a null value.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.DateDiffYear(System.DateTime,System.DateTime)">
            <summary>
            Counts the number of year boundaries between two non-nullable dates.
            </summary>
            <param name="startDate">The start date for the time period.</param>
            <param name="endDate">The end date for the time period.</param>
            <returns>The number of year boundaries between the two specified dates.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.Like(System.String,System.String)">
            <summary>
            Determines whether a specific character string matches a specified pattern. This method is currently only supported in LINQ to SQL queries.
            </summary>
            <param name="matchExpression">The string to be searched for a match.</param>
            <param name="pattern">The pattern, which may include wildcard characters, to match in matchExpression.</param>
            <returns>true if matchExpression matches the pattern; otherwise, false.</returns>
        </member>
        <member name="M:ALinq.SqlClient.SqlMethods.Like(System.String,System.String,System.Char)">
            <summary>
            Determines whether a specific character string matches a specified pattern. This method is currently only supported in LINQ to SQL queries.
            </summary>
            <param name="matchExpression">The string to be searched for a match.</param>
            <param name="pattern">The pattern, which may include wildcard characters, to match in matchExpression.</param>
            <param name="escapeCharacter">The character to put in front of a wildcard character to indicate that it should be interpreted as a regular character and not as a wildcard character.</param>
            <returns>true if matchExpression matches the pattern; otherwise, false.</returns>
        </member>
        <member name="T:ALinq.ObjectChangeConflict">
            <summary>
            Represents an update attempt with one or more optimistic concurrency conflicts.
            </summary>
        </member>
        <member name="M:ALinq.ObjectChangeConflict.Resolve">
            <summary>
            Resolves member conflicts by keeping current values and resetting the baseline original values to match the more recent database values.
            </summary>
        </member>
        <member name="M:ALinq.ObjectChangeConflict.Resolve(ALinq.RefreshMode)">
            <summary>
            Resolves member conflicts by using the specified ALinq.RefreshMode.
            </summary>
            <param name="refreshMode">The appropriate option from ALinq.RefreshMode.</param>
        </member>
        <member name="M:ALinq.ObjectChangeConflict.Resolve(ALinq.RefreshMode,System.Boolean)">
            <summary>
            Resolve member conflicts keeping current values and resetting the baseline original values.
            </summary>
            <param name="refreshMode">The appropriate option from ALinq.RefreshMode.</param>
            <param name="autoResolveDeletes">When true, automatically resolves conflicts resulting from a modified object that is no longer in the database.</param>
        </member>
        <member name="P:ALinq.ObjectChangeConflict.IsDeleted">
            <summary>
            Gets a value that indicates whether the object in conflict has been deleted from the database.
            </summary>
            <returns>
            True if the object has been deleted.
            </returns>
        </member>
        <member name="P:ALinq.ObjectChangeConflict.IsResolved">
            <summary>
            Gets a value that indicates whether the conflicts for this object have already been resolved.
            </summary>
            <returns>
            True if the conflicts have been resolved.
            </returns>
        </member>
        <member name="P:ALinq.ObjectChangeConflict.MemberConflicts">
            <summary>
            Gets a collection of all member conflicts that caused the update to fail.
            </summary>
            <returns>
            A collection of member conflicts.
            </returns>
        </member>
        <member name="P:ALinq.ObjectChangeConflict.Object">
            <summary>
            Gets the object in conflict.
            </summary>
            <returns>
            The object in conflict.
            </returns>
        </member>
        <member name="T:ALinq.DataContext">
            <summary>
            Represents the main entry point for the ALINQ framework.
            </summary>
        </member>
        <member name="M:ALinq.DataContext.#ctor(System.Data.IDbConnection)">
            <summary>
            Initializes a new instance of the ALinq.DataContext class by referencing the connection used by the .NET Framework.
            </summary>
            <param name="connection">The connection used by the .NET Framework.</param>
        </member>
        <member name="M:ALinq.DataContext.#ctor(System.Data.IDbConnection,System.Type)">
            <summary>
             Initializes a new instance of the ALinq.DataContext class.
            </summary>
            <param name="connection">The connection used by the .NET Framework.</param>
            <param name="providerType">The provider type.</param>
        </member>
        <member name="M:ALinq.DataContext.#ctor(System.Data.IDbConnection,ALinq.Mapping.MappingSource)">
            <summary>
            Initializes a new instance of the ALinq.DataContext class by referencing a connection and a mapping source.
            </summary>
            <param name="connection">The connection used by the .NET Framework.</param>
            <param name="mapping">The ALinq.Mapping.MappingSource.</param>
        </member>
        <member name="M:ALinq.DataContext.#ctor(System.String,ALinq.Mapping.MappingSource)">
            <summary>
            Initializes a new instance of the ALinq.DataContext class by referencing a file source and a mapping source.
            </summary>
            <param name="fileOrServerOrConnection">The database file path or connection string.</param>
            <param name="mapping">The ALinq.Mapping.MappingSource.</param>
        </member>
        <member name="M:ALinq.DataContext.#ctor(System.String,System.Type)">
            <summary>
             Initializes a new instance of the ALinq.DataContext class.
            </summary>
            <param name="fileOrServerOrConnection">The database file path or connection string.</param>
            <param name="providerType">The provider type.</param>
        </member>
        <member name="M:ALinq.DataContext.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ALinq.DataContext class by referencing a file source.
            </summary>
            <param name="fileOrServerOrConnection"></param>
        </member>
        <member name="M:ALinq.DataContext.SubmitChanges(ALinq.ConflictMode)">
            <summary>
            Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.
            </summary>
            <param name="failureMode">The action to be taken if the submission fails. Valid arguments are as follows: ALinq.ConflictMode.FailOnFirstConflictSystem.Data.Linq.ConflictMode.ContinueOnConflict</param>
        </member>
        <member name="M:ALinq.DataContext.Refresh(ALinq.RefreshMode,System.Collections.IEnumerable)">
            <summary>
            Refreshes an entity object according to the specified mode.
            </summary>
            <param name="mode">A value that specifies how optimistic concurrency conflicts are handled.</param>
            <param name="entities">The collection of entities to be refreshed.</param>
        </member>
        <member name="M:ALinq.DataContext.Refresh(ALinq.RefreshMode,System.Object)">
            <summary>
            Refreshes an array of entity objects according to the specified mode.
            </summary>
            <param name="mode">A value that specifies how optimistic concurrency conflicts are handled.</param>
            <param name="entity">The array of entity objects to be refreshed.</param>
        </member>
        <member name="M:ALinq.DataContext.Refresh(ALinq.RefreshMode,System.Object[])">
            <summary>
            Refreshes a collection of entity objects according to the specified mode.
            </summary>
            <param name="mode">A value that specifies how optimistic concurrency conflicts are handled.</param>
            <param name="entities">The array of entity objects to be refreshed.</param>
        </member>
        <member name="M:ALinq.DataContext.Translate``1(System.Data.Common.DbDataReader)">
            <summary>
            Converts an existing System.Data.Common.DbDataReader to objects.
            </summary>
            <typeparam name="TResult">The type of the System.Collections.Generic.IEnumerable&lt;T&gt; to be returned.</typeparam>
            <param name="reader">The System.Data.IDataReader to be converted.</param>
            <returns>A collection of objects returned by the conversion.</returns>
        </member>
        <member name="M:ALinq.DataContext.Translate(System.Data.Common.DbDataReader)">
            <summary>
            Converts an existing System.Data.Common.DbDataReader to objects.
            </summary>
            <param name="reader">The System.Data.IDataReader to be converted.</param>
            <returns>A list of objects returned by the conversion.</returns>
        </member>
        <member name="M:ALinq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
            <summary>
            Converts an existing System.Data.Common.DbDataReader to objects.
            </summary>
            <param name="elementType">The type of the System.Collections.Generic.IEnumerable&lt;T&gt; to be returned.  The algorithm for matching columns in the result to fields and properties in the object works as follows: If a field or property is mapped to a particular column name, that column name is expected in the resultset.  If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.  The comparison is performed by looking for a case-sensitive match first. If this match is not found, a subsequent search is occurs for a case-insensitive match.  The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true: T is an entity explicitly tracked by the ALinq.DataContext.  ALinq.DataContext.ObjectTrackingEnabled is true.  The entity has a primary key.  Otherwise an exception is thrown.</param>
            <param name="reader">The System.Data.IDataReader to be converted.</param>
            <returns>A list of objects returned by the conversion.</returns>
        </member>
        <member name="M:ALinq.DataContext.GetTable``1">
            <summary>
            Returns a collection of objects of a particular type, where the type is defined by the TEntity parameter.
            </summary>
            <typeparam name="TEntity">The type of the objects to be returned.</typeparam>
            <returns>A collection of objects.</returns>
        </member>
        <member name="P:ALinq.DataContext.Log">
            <summary>
            Specifies the destination to write the SQL query or command.
            </summary>
            <returns>
            The System.IO.TextReader to use for writing the command.
            </returns>
        </member>
        <member name="M:ALinq.DataContext.SubmitChanges">
            <summary>
            Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.
            </summary>
        </member>
        <member name="P:ALinq.DataContext.ChangeConflicts">
            <summary>
            Returns a collection of objects that caused concurrency conflicts when ALinq.DataContext.SubmitChanges() was called.
            </summary>
            <returns>
            A collection of the objects.
            </returns>
        </member>
        <member name="P:ALinq.DataContext.Mapping">
            <summary>
            Returns the ALinq.Mapping.MetaModel on which the mapping is based.
            </summary>
            <returns>
            The ALinq.Mapping.MetaModel.
            </returns>
        </member>
        <member name="P:ALinq.DataContext.Connection">
            <summary>
            Returns the connection used by the framework.
            </summary>
        </member>
        <member name="P:ALinq.DataContext.Transaction">
            <summary>
            Sets a local transaction for the .NET Framework to use to access the database.
            </summary>
        </member>
        <member name="M:ALinq.DataContext.GetTable(System.Type)">
            <summary>
            Returns a collection of objects of a particular type, where the type is defined by the type parameter.
            </summary>
            <param name="type">The type of the objects to be returned.</param>
            <returns>A collection of objects.</returns>
        </member>
        <member name="P:ALinq.DataContext.CommandTimeout">
            <summary>
            Increases the time-out period for queries that would otherwise time out during the default time-out period.
            </summary>
            <returns>
            An integer value that represents seconds.
            </returns>
        </member>
        <member name="P:ALinq.DataContext.LoadOptions">
            <summary>
            Gets or sets the ALinq.DataLoadOptions associated with this ALinq.DataContext.
            </summary>
            <returns>
            The prefetch load options for related data.
            </returns>
        </member>
        <member name="P:ALinq.DataContext.DeferredLoadingEnabled">
            <summary>
            Specifies whether to delay-load one-to-many or one-to-one relationships.
            </summary>
            <returns>
            true if deferred loading is enabled; otherwise false.
            </returns>
        </member>
        <member name="M:ALinq.DataContext.CreateDatabase">
            <summary>
            Creates a database on the server.
            </summary>
        </member>
        <member name="M:ALinq.DataContext.DatabaseExists">
            <summary>
            Determines whether the associated database can be opened.
            </summary>
            <returns>true if the specified database can be opened; otherwise, false.</returns>
        </member>
        <member name="M:ALinq.DataContext.DeleteDatabase">
            <summary>
            Deletes the associated database.
            </summary>
        </member>
        <member name="M:ALinq.DataContext.ExecuteCommand(System.String,System.Object[])">
            <summary>
            Executes SQL commands directly on the database.
            </summary>
            <param name="command">The SQL command to be executed.</param>
            <param name="parameters">The array of parameters to be passed to the command. Note the following behavior: If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.  If the array contains objects that are not referenced in the command string, no exception is thrown.  If any one of the parameters is null, it is converted to DBNull.Value.</param>
            <returns>An int representing the number of rows modified by the executed command.</returns>
        </member>
        <member name="M:ALinq.DataContext.ExecuteDynamicDelete(System.Object)">
            <summary>
            Called inside delete override methods to redelegate to LINQ to SQL the task of generating and executing dynamic SQL for delete operations.
            </summary>
            <param name="entity">The entity to be deleted.</param>
        </member>
        <member name="M:ALinq.DataContext.ExecuteDynamicInsert(System.Object)">
            <summary>
            Called inside insert override methods to redelegate to LINQ to SQL the task of generating and executing dynamic SQL for insert operations.
            </summary>
            <param name="entity">The entity to be inserted.</param>
        </member>
        <member name="M:ALinq.DataContext.ExecuteDynamicUpdate(System.Object)">
            <summary>
            Called inside update override methods to redelegate to LINQ to SQL the task of generating and executing dynamic SQL for update operations.
            </summary>
            <param name="entity">The entity to be updated.</param>
        </member>
        <member name="M:ALinq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Executes the stored database procedure or scalar function associated with the specified CLR method.
            </summary>
            <param name="instance">The instance of the method invocation (the current object).</param>
            <param name="methodInfo">Identifies the CLR method that corresponds to a database method.</param>
            <param name="parameters">The array of parameters to be passed to the command.</param>
            <returns>The result (the return value and output parameters) of executing the specified method.</returns>
        </member>
        <member name="M:ALinq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
            <summary>
            Executes SQL queries directly on the database and returns objects.
            </summary>
            <typeparam name="TResult">The type of the elements in the returned collection.</typeparam>
            <param name="query">The SQL query to be executed.</param>
            <param name="parameters">The array of parameters to be passed to the command. Note the following behavior: If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.  If the array contains objects that are not referenced in the command string, no exception is thrown.  If a parameter is null, it is converted to DBNull.Value.</param>
            <returns>A collection of objects returned by the query.</returns>
        </member>
        <member name="M:ALinq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
            <summary>
            Executes SQL queries directly on the database.
            </summary>
            <param name="elementType">The type of the System.Collections.Generic.IEnumerable&lt;T&gt; to be returned.  The algorithm for matching columns in the result of the query to fields or properties in the object works as follows: If a field or property is mapped to a particular column name, that column name is expected in the resultset.  If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.  The comparison is performed by looking for a case-sensitive match first. If this match is not found, a subsequent search occurs for a case-insensitive match.  The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true: T is an entity explicitly tracked by the ALinq.DataContext.  ALinq.DataContext.ObjectTrackingEnabled is true.  The entity has a primary key.  Otherwise an exception is thrown.</param>
            <param name="query">The SQL query to be executed.</param>
            <param name="parameters">The array of parameters to be passed to the command. Note the following behavior: If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.  If the array contains objects that are not referenced in the command string, no exception is thrown.  If a parameter is null, it is converted to DBNull.Value.</param>
            <returns>An System.Collections.Generic.IEnumerable&lt;T&gt; collection of objects returned by the query.</returns>
        </member>
        <member name="M:ALinq.DataContext.GetCommand(System.Linq.IQueryable)">
            <summary>
            Provides information about SQL commands generated by LINQ to SQL.
            </summary>
            <param name="query">The query whose SQL command information is to be retrieved.</param>
            <returns>The requested command information object.</returns>
        </member>
        <member name="M:ALinq.DataContext.GetChangeSet">
            <summary>
            Provides access to the modified objects tracked by ALinq.DataContext.
            </summary>
            <returns>The set of objects is returned as three read-only collections.</returns>
        </member>
        <member name="M:ALinq.DataContext.Dispose(System.Boolean)">
            <summary>
            Releases resources used by the ALinq.DataContext.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:ALinq.DataContext.Dispose">
            <summary>
            Releases all resources used by the ALinq.DataContext.
            </summary>
        </member>
        <member name="P:ALinq.DataContext.ObjectTrackingEnabled">
            <summary>
            Instructs the framework to track the original value and object identity for this ALinq.DataContext.
            </summary>
            <returns>
            true to enable object tracking; otherwise, false. The default is true.
            </returns>
        </member>
        <member name="T:ALinq.Table`1">
            <summary>
            Represents a table for a particular type in the underlying database.
            </summary>
            <typeparam name="TEntity">The type of the data in the table.</typeparam>
        </member>
        <member name="M:ALinq.Table`1.Attach(`0)">
            <summary>
            Attaches a disconnected or "detached" entity to a new ALinq.DataContext when original values are required for optimistic concurrency checks.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:ALinq.Table`1.Attach(`0,System.Boolean)">
            <summary>
            Attaches an entity to the ALinq.DataContext in either a modified or unmodified state.
            </summary>
            <param name="entity">The entity to be attached.</param>
            <param name="asModified">True to attach the entity as modified.</param>
        </member>
        <member name="M:ALinq.Table`1.Attach(`0,`0)">
            <summary>
            Attaches an entity to the ALinq.DataContext in either a modified or unmodified state by specifying both the entity and its original state.
            </summary>
            <param name="entity">The entity to be attached.</param>
            <param name="original">An instance of the same entity type with data members that contain the original values.</param>
        </member>
        <member name="M:ALinq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Attaches all entities of a collection to the ALinq.DataContext in either a modified or unmodified state.
            </summary>
            <typeparam name="TSubEntity">The type of entities to attach.</typeparam>
            <param name="entities">The collection of entities.</param>
        </member>
        <member name="M:ALinq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            Attaches all entities of a collection to the ALinq.DataContext in either a modified or unmodified state.
            </summary>
            <typeparam name="TSubEntity">The type of entities to attach.</typeparam>
            <param name="entities">The collection of entities.</param>
            <param name="asModified">true if the object has a timestamp or RowVersion member, false if original values are being used for the optimistic concurrency check.</param>
        </member>
        <member name="M:ALinq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Puts all entities from the collection into a pending delete state.
            </summary>
            <typeparam name="TSubEntity">The type of the elements to delete.</typeparam>
            <param name="entities">The entities being removed.</param>
        </member>
        <member name="M:ALinq.Table`1.DeleteOnSubmit(`0)">
            <summary>
            Puts an entity from this table into a pending delete state.
            </summary>
            <param name="entity">The entity to be deleted.</param>
        </member>
        <member name="M:ALinq.Table`1.GetEnumerator">
            <summary>
            Gets an enumerator for the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ALinq.Table`1.GetModifiedMembers(`0)">
            <summary>
            Returns an array of modified members that contain their current and original values.
            </summary>
            <param name="entity">The entity from which to get the array.</param>
            <returns>An array of modified members.</returns>
        </member>
        <member name="M:ALinq.Table`1.GetNewBindingList">
            <summary>
            Creates a new list for binding to a data source.
            </summary>
            <returns>A new System.ComponentModel.IBindingList for binding to a data source.</returns>
        </member>
        <member name="M:ALinq.Table`1.GetOriginalEntityState(`0)">
            <summary>
            Returns an instance that contains the original state of the entity.
            </summary>
            <param name="entity">The entity whose original state is to be returned.</param>
            <returns>A ALinq.Table&lt;TEntity&gt; instance in its original state.</returns>
        </member>
        <member name="M:ALinq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds all entities of a collection to the ALinq.DataContext in a pending insert state.
            </summary>
            <typeparam name="TSubEntity">The type of the elements to insert.</typeparam>
            <param name="entities">The entities to add.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ALinq.Table`1.InsertOnSubmit(`0)" -->
        <member name="M:ALinq.Table`1.ToString">
            <summary>
            Returns a string that represents the table.
            </summary>
            <returns>A string representing the table.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ALinq.Table`1.Context" -->
        <!-- Badly formed XML comment ignored for member "P:ALinq.Table`1.IsReadOnly" -->
        <member name="T:ALinq.Binary">
            <summary>
            Represents an immutable block of binary data.
            </summary>
        </member>
        <member name="M:ALinq.Binary.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the ALinq.Binary class.
            </summary>
            <param name="value">The bytes representing the binary data.</param>
        </member>
        <member name="M:ALinq.Binary.Equals(ALinq.Binary)">
            <summary>
            Determines whether two binary objects are equal.
            </summary>
            <param name="other">The System.Object to which the current object is being compared.</param>
            <returns>true if the two binary objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:ALinq.Binary.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current System.Object.
            </summary>
            <param name="obj">The System.Object to compare with the current System.Object.</param>
            <returns>true if the two binary objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:ALinq.Binary.EqualsTo(ALinq.Binary)">
            <summary>
            Determines whether two binary objects are equal.
            </summary>
            <param name="binary">The System.Object to which the current object is being compared.
            </param>
            <returns>true if the two binary objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:ALinq.Binary.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current binary object.</returns>
        </member>
        <member name="M:ALinq.Binary.op_Equality(ALinq.Binary,ALinq.Binary)">
            <summary>
            Describes the equality relationship between two binary objects.
            </summary>
            <param name="binary1">First binary object.</param>
            <param name="binary2">Second binary object.</param>
            <returns>true if the binary objects are equal; otherwise false.</returns>
        </member>
        <member name="M:ALinq.Binary.op_Implicit(System.Byte[])~ALinq.Binary">
            <summary>
            Enables arrays of bytes to be implicitly coerced to the ALinq.Binary type in a programming language.
            </summary>
            <param name="value"> The array of bytes to convert into an instance of the ALinq.Binary type.</param>
            <returns>A ALinq.Binary class containing the coerced value.</returns>
        </member>
        <member name="M:ALinq.Binary.op_Inequality(ALinq.Binary,ALinq.Binary)">
            <summary>
            Describes the inequality relationship between two binary objects.
            </summary>
            <param name="binary1">The first binary object.</param>
            <param name="binary2">The second binary object.</param>
            <returns>true if the binary objects are not equal; otherwise false.</returns>
        </member>
        <member name="M:ALinq.Binary.ToArray">
            <summary>
            Returns an array of bytes that represents the current binary object.
            </summary>
            <returns>A byte array that contains the value of the current binary object.</returns>
        </member>
        <member name="M:ALinq.Binary.ToString">
            <summary>
            Returns a System.String that represents the current binary object.
            </summary>
            <returns>A System.String that represents the current binary object.</returns>
        </member>
        <member name="P:ALinq.Binary.Length">
            <summary>
            Gets the length of the binary object.
            </summary>
        </member>
        <member name="T:ALinq.ConflictMode">
            <summary>
            Specifies when concurrency conflicts should be reported.
            </summary>
        </member>
        <member name="F:ALinq.ConflictMode.FailOnFirstConflict">
            <summary>
            Specifies that attempts to update the database should stop immediately when the first concurrency conflict error is detected.
            </summary>
        </member>
        <member name="F:ALinq.ConflictMode.ContinueOnConflict">
            <summary>
            Specifies that all updates to the database should be tried, and that concurrency conflicts should be accumulated and returned at the end of the process.
            </summary>
        </member>
        <member name="T:ALinq.ForeignKeyReferenceAlreadyHasValueException">
            <summary>
            Represents errors that occur when an attempt is made to change a foreign key when the entity is already loaded.
            </summary>
        </member>
        <member name="M:ALinq.ForeignKeyReferenceAlreadyHasValueException.#ctor">
            <summary>
            Initializes a new instance of the ALinq.ForeignKeyReferenceAlreadyHasValueException class with a system-supplied message that describes the error.
            </summary>
        </member>
        <member name="M:ALinq.ForeignKeyReferenceAlreadyHasValueException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ALinq.ForeignKeyReferenceAlreadyHasValueException class with a specified message that describes the error.
            </summary>
            <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
        </member>
        <member name="M:ALinq.ForeignKeyReferenceAlreadyHasValueException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ALinq.ForeignKeyReferenceAlreadyHasValueException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:ALinq.Oracle.OracleSqlBuilder.GetSequenceName(ALinq.Mapping.MetaDataMember,ALinq.SqlClient.SqlIdentifier)">
            <summary>
            如果为关键字名称，则为它加上双引号，否则返回原值。
            </summary>
        </member>
        <member name="T:ALinq.RefreshMode">
            <summary>
            Defines how the Overload:ALinq.DataContext.Refresh method handles optimistic concurrency conflicts.
            </summary>
        </member>
        <member name="F:ALinq.RefreshMode.KeepCurrentValues">
            <summary>
            Forces the Overload:ALinq.DataContext.Refresh method to swap the original value with the values retrieved from the database. No current value is modified.
            </summary>
        </member>
        <member name="F:ALinq.RefreshMode.KeepChanges">
            <summary>
            Forces the Overload:ALinq.DataContext.Refresh method to keep the current value that has been changed, but updates the other values with the database values.
            </summary>
        </member>
        <member name="F:ALinq.RefreshMode.OverwriteCurrentValues">
            <summary>
            Forces the Overload:ALinq.DataContext.Refresh method to override all the current values with the values from the database.
            </summary>
        </member>
        <member name="T:ALinq.IFunctionResult">
            <summary>
            Provides access to the return value of a function.
            </summary>
        </member>
        <member name="P:ALinq.IFunctionResult.ReturnValue">
            <summary>
            Gets the return value of a function.
            </summary>
            <returns>
            The value returned by the function.
            </returns>
        </member>
        <member name="T:ALinq.EntityRef`1">
            <summary>
            Provides for deferred loading and relationship maintenance for the singleton side of a one-to-many relationship in a LINQ to SQL application.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:ALinq.EntityRef`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the ALinq.EntityRef&lt;TEntity&gt; class by referencing the target entity.
            </summary>
            <param name="entity">The target entity.</param>
        </member>
        <member name="M:ALinq.EntityRef`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the ALinq.EntityRef&lt;TEntity&gt; class by specifying the source.
            </summary>
            <param name="source">The reference source.</param>
        </member>
        <member name="M:ALinq.EntityRef`1.#ctor(ALinq.EntityRef{`0})">
            <summary>
            Initializes a new instance of the ALinq.EntityRef&lt;TEntity&gt; class by referencing the target entity.
            </summary>
            <param name="entityRef">The target entity.</param>
        </member>
        <member name="P:ALinq.EntityRef`1.Entity">
            <summary>
            Gets or sets the target entity.
            </summary>
            <returns>
            The target entity.
            </returns>
        </member>
        <member name="P:ALinq.EntityRef`1.HasLoadedOrAssignedValue">
            <summary>
            Gets a value that indicates whether the target has been loaded or assigned.
            </summary>
            <returns>
            True if the target has been loaded or assigned.
            </returns>
        </member>
        <member name="T:ALinq.IMultipleResults">
            <summary>
            Represents the results of mapped functions or queries with variable return sequences.
            </summary>
        </member>
        <member name="M:ALinq.IMultipleResults.GetResult``1">
            <summary>
            Retrieves the next result as a sequence of a specified type.
            </summary>
            <typeparam name="TElement">The type of the sequence to be returned.</typeparam>
            <returns>An enumeration for iterating over the results.</returns>
        </member>
        <member name="T:ALinq.IExecuteResult">
            <summary>
            Provides access to the return value or results of executing a query.
            </summary>
        </member>
        <member name="M:ALinq.IExecuteResult.GetParameterValue(System.Int32)">
            <summary>
            Provides access to the nth output parameter.
            </summary>
            <param name="parameterIndex">The index of the parameter to be retrieved.</param>
            <returns>An object that contains the value of the specified parameter.</returns>
        </member>
        <member name="P:ALinq.IExecuteResult.ReturnValue">
            <summary>
            Gets the return value or result of the executed query.
            </summary>
            <returns>
            The value or result of the executed query.
            </returns>
        </member>
        <member name="T:ALinq.DBConvert">
            <summary>
            Used internally to convert one type to another.
            </summary>
        </member>
        <member name="M:ALinq.DBConvert.ChangeType``1(System.Object)">
            <summary>
            Changes the specified value to the current type.
            </summary>
            <typeparam name="T">The type to change to.</typeparam>
            <param name="value">The object to be converted.</param>
            <returns>An object of the specified type that contains the converted value.</returns>
        </member>
        <member name="M:ALinq.DBConvert.ChangeType(System.Object,System.Type)">
            <summary>
            Changes the specified value to the specified type.
            </summary>
            <param name="value">The object to be converted.</param>
            <param name="type">The type to convert the object to.</param>
            <returns>An object that contains the converted value of the specified type.</returns>
        </member>
        <member name="T:ALinq.EntitySet`1">
            <summary>
            Provides for deferred loading and relationship maintenance for the collection side of one-to-many and one-to-one relationships in a LINQ to SQL applications. 
            </summary>
            <typeparam name="TEntity">The data type of the target entity.</typeparam>
        </member>
        <member name="E:ALinq.EntitySet`1.ListChanged">
            <summary>
            Occurs when the contents of a list are changed.
            </summary>
        </member>
        <member name="M:ALinq.EntitySet`1.#ctor">
            <summary>
            Initializes a new instance of the ALinq.EntitySet&lt;TEntity&gt; class.
            </summary>
        </member>
        <member name="M:ALinq.EntitySet`1.#ctor(System.Action{`0},System.Action{`0})">
            <summary>
            Initializes a new instance of the ALinq.EntitySet&lt;TEntity&gt; class while supplying handlers for add and remove operations.
            </summary>
            <param name="onAdd">Delegate for ALinq.EntitySet&lt;TEntity&gt;.Add(TEntity).</param>
            <param name="onRemove">Delegate for ALinq.EntitySet&lt;TEntity&gt;.Remove(TEntity).</param>
        </member>
        <member name="M:ALinq.EntitySet`1.Add(`0)">
            <summary>
            Adds an entity.
            </summary>
            <param name="entity">The entity to add.</param>
        </member>
        <member name="M:ALinq.EntitySet`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a collection of entities.
            </summary>
            <param name="collection">The collection to be added.</param>
        </member>
        <member name="M:ALinq.EntitySet`1.Assign(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Assigns an ALinq.EntitySet&lt;TEntity&gt; collection to another ALinq.EntitySet&lt;TEntity&gt; collection.
            </summary>
            <param name="entitySource">The collection to assign.</param>
        </member>
        <member name="M:ALinq.EntitySet`1.Clear">
            <summary>
            Removes all items.
            </summary>
        </member>
        <member name="M:ALinq.EntitySet`1.Contains(`0)">
            <summary>
            Specifies whether the ALinq.EntitySet&lt;TEntity&gt; contains a specific entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>true if the ALinq.EntitySet&lt;TEntity&gt; contains the entity; otherwise, false.</returns>
        </member>
        <member name="M:ALinq.EntitySet`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the ALinq.EntitySet&lt;TEntity&gt; to an array.
            </summary>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The starting index in the array.</param>
        </member>
        <member name="M:ALinq.EntitySet`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An System.Collections.Generic.IEnumerator&lt;T&gt;.</returns>
        </member>
        <member name="M:ALinq.EntitySet`1.GetNewBindingList">
            <summary>
            Creates a new list for binding to a data source.
            </summary>
            <returns>A new System.ComponentModel.IBindingList for binding to a data source.</returns>
        </member>
        <member name="M:ALinq.EntitySet`1.IndexOf(`0)">
            <summary>
            Returns the index of the entity.
            </summary>
            <param name="entity">The entity whose index is to be returned.</param>
            <returns>An integer representing the index.</returns>
        </member>
        <member name="M:ALinq.EntitySet`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an entity at an index position.
            </summary>
            <param name="index">The index representing the position at which to insert the entity.</param>
            <param name="entity">The entity to be inserted.</param>
        </member>
        <member name="M:ALinq.EntitySet`1.Load">
            <summary>
            Loads the ALinq.EntitySet&lt;TEntity&gt;.
            </summary>
        </member>
        <member name="M:ALinq.EntitySet`1.Remove(`0)">
            <summary>
            Removes an entity.
            </summary>
            <param name="entity">The entity to be removed.</param>
            <returns>true if the entity is successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:ALinq.EntitySet`1.RemoveAt(System.Int32)">
            <summary>
            Removes an entity at a specified index.
            </summary>
            <param name="index">The index of the entity to be removed.</param>
        </member>
        <member name="M:ALinq.EntitySet`1.SetSource(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Sets the source of the ALinq.EntitySet&lt;TEntity&gt;.
            </summary>
            <param name="entitySource">The source of the ALinq.EntitySet&lt;TEntity&gt;.</param>
        </member>
        <member name="P:ALinq.EntitySet`1.Count">
            <summary>
            Gets the number of entities in the ALinq.EntitySet&lt;TEntity&gt; collection.
            </summary>
            <returns>
            An integer representing the number of entities.
            </returns>
        </member>
        <member name="P:ALinq.EntitySet`1.HasLoadedOrAssignedValues">
            <summary>
            Specifies whether the ALinq.EntitySet&lt;TEntity&gt; has loaded or assigned a value.
            </summary>
            <returns>
            Returns true if the ALinq.EntitySet&lt;TEntity&gt; has either loaded or assigned a value.
            </returns>
        </member>
        <member name="P:ALinq.EntitySet`1.IsDeferred">
            <summary>
            Specifies whether this ALinq.EntitySet&lt;TEntity&gt; has a deferred query that has not yet executed.
            </summary>
            <returns>
            true if a deferred query has not yet been executed; otherwise false.
            </returns>
        </member>
        <member name="P:ALinq.EntitySet`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index of the element.</param>
            <returns>An ALinq.EntitySet&lt;TEntity&gt; representing the item.</returns>
        </member>
        <member name="T:ALinq.CompiledQuery">
            <summary>
            Provides for compilation and caching of queries for reuse.
            </summary>
        </member>
        <member name="M:ALinq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Compiles the query.
            </summary>
            <typeparam name="TArg0">Represents the type of the parameter that has to be passed in when executing the delegate returned by the ALinq.CompiledQuery.Compile&lt;T0, T1&gt;(System.Linq.Expressions.Expression&lt;System.Func&lt;T0,T1&gt;&gt;) method.</typeparam>
            <typeparam name="TResult">The type of T in the System.Collections.Generic.IEnumerable&lt;T&gt; returned when executing the delegate returned by the ALinq.CompiledQuery.Compile&lt;T0, T1&gt;</typeparam>
            <param name="query">The query expression to be compiled.</param>
            <returns>A generic delegate that represents the compiled query.</returns>
        </member>
        <member name="M:ALinq.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
            <summary>
            Compiles the query.
            </summary>
            <typeparam name="TArg0">Represents the type of the parameter that has to be passed in when executing the delegate returned by the ALinq.CompiledQuery.Compile&lt;T0, T1&gt;(System.Linq.Expressions.Expression&lt;System.Func&lt;T0,T1&gt;&gt;) method.</typeparam>
            <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by the ALinq.CompiledQuery.Compile&lt;T0, T1&gt;(System.Linq.Expressions.Expression&lt;System.Func&lt;T0,T1&gt;&gt;) method.</typeparam>
            <typeparam name="TResult">The type of T in the System.Collections.Generic.IEnumerable&lt;T&gt; returned when executing the delegate returned by the ALinq.CompiledQuery.Compile&lt;T0, T1&gt;(System.Linq.Expressions.Expression&lt;System.Func&lt;T0,T1&gt;&gt;) method.</typeparam>
            <param name="query">The query expression to be compiled.</param>
            <returns>A generic delegate that represents the compiled query.</returns>
        </member>
        <member name="M:ALinq.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})">
            <summary>
            Compiles the query.
            </summary>
            <typeparam name="TArg0">Represents the type of the parameter that has to be passed in when executing the delegate returned by the ALinq.CompiledQuery.Compile&lt;T0, T1&gt;(System.Linq.Expressions.Expression&lt;System.Func&lt;T0,T1&gt;&gt;) method.</typeparam>
            <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by the ALinq.CompiledQuery.Compile&lt;T0, T1&gt;(System.Linq.Expressions.Expression&lt;System.Func&lt;T0,T1&gt;&gt;) method.</typeparam>
            <typeparam name="TArg2">Represents the type of the parameter that has to be passed in when executing the delegate returned by the ALinq.CompiledQuery.Compile&lt;T0, T1&gt;(System.Linq.Expressions.Expression&lt;System.Func&lt;T0,T1&gt;&gt;) method.</typeparam>
            <typeparam name="TResult">The type of T in the System.Collections.Generic.IEnumerable&lt;T&gt; returned when executing the delegate returned by the ALinq.CompiledQuery.Compile&lt;T0, T1&gt;(System.Linq.Expressions.Expression&lt;System.Func&lt;T0,T1&gt;&gt;) method.</typeparam>
            <param name="query">The query expression to be compiled.</param>
            <returns>A generic delegate that represents the compiled query.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ALinq.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" -->
        <member name="P:ALinq.CompiledQuery.Expression">
            <summary>
            Returns the query as a lambda expression.
            </summary>    
            <returns>
            The lambda expression that represents the query.
            </returns>    
        </member>
        <member name="T:ALinq.ISingleResult`1">
            <summary>
            Represents the result of a mapped function that has a single return sequence.
            </summary>
            <typeparam name="T">The type of the elements in the return sequence.</typeparam>
        </member>
        <member name="T:ALinq.Link`1">
            <summary>
            Used to enable deferred loading of individual properties (similar to ALinq.EntityRef&lt;TEntity&gt;).
            </summary>
            <typeparam name="T">The type of the elements in the deferred source.</typeparam>
        </member>
        <member name="M:ALinq.Link`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the ALinq.Link&lt;T&gt; structure by referencing the value of the property.
            </summary>
            <param name="value">The value for the property.</param>
        </member>
        <member name="M:ALinq.Link`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the ALinq.Link&lt;T&gt; structure by referencing the source.
            </summary>
            <param name="source">The source collection.</param>
        </member>
        <member name="M:ALinq.Link`1.#ctor(ALinq.Link{`0})">
            <summary>
            Initializes a new instance of the ALinq.Link&lt;T&gt; structure by copying the internal state from another ALinq.Link&lt;T&gt; instance.
            </summary>
            <param name="link">The ALinq.Link&lt;T&gt; instance from which to copy.</param>
        </member>
        <member name="P:ALinq.Link`1.HasValue">
            <summary>
            Gets a value that specifies whether the source has a value.
            </summary>
            <returns>
            Returns true if the source has an assigned or loaded value (including null).
            </returns>
        </member>
        <member name="P:ALinq.Link`1.HasLoadedOrAssignedValue">
            <summary>
            Specifies whether the ALinq.Link&lt;T&gt; has loaded or assigned a value.
            </summary>
            <returns>
            true if the ALinq.Link&lt;T&gt; has either loaded or assigned a value; otherwise false.
            </returns>
        </member>
        <member name="P:ALinq.Link`1.Value">
            <summary>
            Gets or sets the value assigned to or loaded by the ALinq.Link&lt;T&gt;.
            </summary>
            <returns>
            The value of this deferred property.
            </returns>
        </member>
    </members>
</doc>
